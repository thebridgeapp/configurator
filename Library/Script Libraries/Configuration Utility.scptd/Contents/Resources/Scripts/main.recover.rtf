{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf130
{\fonttbl\f0\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue255;\red64\green128\blue0;
\red76\green78\blue78;\red230\green0\blue0;\red0\green22\blue176;\red108\green5\blue211;\red68\green21\blue176;
}
\deftab560
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\f0\b\fs28 \cf2 use
\b0  
\i \cf3 framework
\i0 \cf2  "Foundation"\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 use
\b0  
\i \cf3 scripting additions
\i0 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 property
\b0  \cf4 cfgutilPOSIXPath\cf2  : 
\i \cf3 missing value
\i0 \cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 property
\b0  \cf4 defaultBooleanProperties\cf2  : \{"backupWillBeEncrypted", "batteryIsCharging", "cloudBackupsAreEnabled", "hasTelephonyCapability", "isPaired", "isSupervised", "isSupervisedToMe", "pairingAllowed", "passcodeProtected"\}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 property
\b0  \cf4 targetAppFileName\cf2  : "Apple Configurator.app"\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 property
\b0  \cf4 targetAppID\cf2  : "com.apple.configurator.ui"\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* This library written using the ASObjC Explorer application <http://www.macosxautomation.com/applescript/apps> *)\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* Detailed information available at: <https://configautomation.com> *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* INFO HANDLERS *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  
\b \cf3 show help
\b0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf6 CNFGshowHelp\cf2 ()\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  
\b \cf3 show help
\b0 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGshowHelp\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b set
\b0  \cf4 thisFile\cf2  
\b to
\b0  (
\b \cf7 path to resource
\b0 \cf2  "handlers.html")\
	
\b tell
\b0  
\i \cf3 application
\i0 \cf2  "Safari"\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b \cf3 activate
\b0 \cf2 \
		
\b \cf3 open
\b0 \cf2  \cf4 thisFile\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b tell
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGshowHelp\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGgetHandlers\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b set
\b0  \cf4 handlerTitles\cf2  
\b to
\b0  \{"CNFGshowHelp()", "CNFGgetHandlers()", "CNFGgetUtilityPath()", "CNFGnamesOfDefaultProperties()", "CNFGtitlesOfDefaultProperties()", "CNFGtitlesOfSpecifiedProperties(namesOfSpecifiedProperties)", "CNFGsetupAssistantSkips()", "CNFGcommandUtilityHelp()", "CNFGconnectedDevices(shouldReturnResultsAsRecords)", "CNFGdevicesMatchingSpecifiedClass(className, shouldReturnResultsAsRecords)", "CNFGdevicesMatchingPropertyWithValue(specifiedPropertyName, specifiedPropertyValue, shouldReturnResultsAsRecords)", "CNFGvaluesOfSpecifiedProperties(listOfPropertyNames, shouldReturnResultsAsRecords)", "CNFGdeviceNames()", "CNFGdeviceECIDs()", "CNFGdeviceUDIDs()", "CNFGdeviceSerialNumbers()", "CNFGchooseFromConnectedDevices(thisPrompt, shouldAllowMultipleSelections)", "CNFGnamesOfSpecifiedDevices(specifiedECIDs)", "CNFGspecifiedPropertyValueForSpecifiedDevice(thisPropertyName, thisECID)", "CNFGorgPropsOfSpecifiedDevice(thisECID)", "CNFGbatteryPropsOfSpecifiedDevice(thisECID)", "CNFGappsOnSpecifiedDevice(thisECID, shouldReturnResultsAsRecords)", "CNFGsystemAppsOnSpecifiedDevice(thisECID, shouldReturnResultsAsRecords)", "CNFGactivateDevices()", "CNFGeraseSpecifiedDevices(specifiedECIDs, pathToCertificate, pathToPrivateKey)", "CNFGrestoreSpecifiedDevices(specifiedECIDs)", "CNFGprepareSpecifiedDevices(specifiedECIDs, shouldEnrollInMDM, pathToMDMCertificate, MDMEnrollmentURL, shouldSuperviseDevices, allowiTunesPairing, pathToSupervisionCertificate, supervisionOrgName, supervisionOrgAddress, supervisionOrgDept, supervisionOrgPhone, supervisionOrgEmail, listOfSetupAssistantSkips)", "CNFGprepareDevicesUsingAutomatedEnrollment(specifiedECIDs, userName, passWordForAccount, mobileWiFiProfilePath)", "CNFGrenameSpecifiedDevice(specifiedECID, newName)", "CNFGrenameSpecifiedDevicesUsingNumericSuffix(specifiedECIDs, baseName, startingNumber, minimumNumericLength, numericSuffixSeparator)", "CNFGinstallProfileOnSpecifiedDevices(specifiedECIDs, pathToProfile)", "CNFGinstallDocumentOnSpecifiedDevices(specifiedECIDs, pathToDocument, relatedApplicationiOSID)", "CNFGinstallAppsOnSpecifiedDevices(specifiedECIDs, theseAppFiles)", "CNFGinstallWallpaperOnSpecifiedDevices(specifiedECIDs, pathToCertificate, pathToPrivateKey, pathToWallpaperFile, usageIndicator, overlayText, shouldUseDeviceName)", "CNFGgenerateDeviceBackupData()", "CNFGbackupIDForBackupMatchingSerialNumber(targetSerialNumber)", "CNFGrestoreDevicesFromSpecifiedBackup(specifiedECIDs, targetBackupID, backupIsEncrypted, passwordForBackup)", "CNFGrestoreDevicesFromTheirBackups(specifiedECIDs, sharedPasswordForBackup)", "CFNGbackupSpecifiedDevices(specifiedECIDs)", "NOTE: The word \\"all\\" (with quotes) can be used as the value of the \'93specifiedECIDs\'94 parameter to indicate that the action should be applied to all connected devices. This substitution does not work with the \'93specifiedECID\'94 or \'93thisECID\'94 parameters."\}\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGgetHandlers\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- log "Handler: CNFGgetUtilityPath()"\cf2 \
	
\b try
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 (* CLI tool  *)\cf2 \
		\cf5 -- look for CLI tool in Usr local bin folder\cf2 \
		
\b set
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2  
\b to
\b0  "/usr/local/bin/cfgutil"\
		
\b set
\b0  
\b the
\b0  \cf4 fileExistenceStatus\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGcheckForItemExistence\cf2 (\cf4 ConfigurationUtilityPOSIXPath\cf2 )\
		
\b if
\b0  \cf4 fileExistenceStatus\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 cfgutilPOSIXPath\cf2  
\b to
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2 \
			
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2 \
			
\b return
\b0  \cf4 cfgutil\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		\cf5 (* In APPLICATION *)\cf2 \
		\cf5 -- check stored location\cf2 \
		
\b if
\b0  \cf4 cfgutilPOSIXPath\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2  
\b to
\b0  \cf4 cfgutilPOSIXPath\cf2 \
			
\b set
\b0  
\b the
\b0  \cf4 fileExistenceStatus\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGcheckForItemExistence\cf2 (\cf4 ConfigurationUtilityPOSIXPath\cf2 )\
			
\b if
\b0  \cf4 fileExistenceStatus\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2  & "/Contents/MacOS/cfgutil"\
				
\b return
\b0  \cf4 cfgutil\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		\cf5 -- look in Applications folder\cf2 \
		
\b set
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2  
\b to
\b0  "/Applications/" & \cf4 targetAppFileName\cf2 \
		
\b set
\b0  
\b the
\b0  \cf4 fileExistenceStatus\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGcheckForItemExistence\cf2 (\cf4 ConfigurationUtilityPOSIXPath\cf2 )\
		
\b if
\b0  \cf4 fileExistenceStatus\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 cfgutilPOSIXPath\cf2  
\b to
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2 \
			
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2  & "/Contents/MacOS/cfgutil"\
			
\b return
\b0  \cf4 cfgutil\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		\cf5 -- look in Utilities folder\cf2 \
		
\b set
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2  
\b to
\b0  "/Applications/Utilities/" & \cf4 targetAppFileName\cf2 \
		
\b set
\b0  
\b the
\b0  \cf4 fileExistenceStatus\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGcheckForItemExistence\cf2 (\cf4 ConfigurationUtilityPOSIXPath\cf2 )\
		
\b if
\b0  \cf4 fileExistenceStatus\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 cfgutilPOSIXPath\cf2  
\b to
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2 \
			
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2  & "/Contents/MacOS/cfgutil"\
			
\b return
\b0  \cf4 cfgutil\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		\cf5 -- ask the Finder to locate the application file\cf2 \
		
\b tell
\b0  
\i \cf3 application
\i0 \cf2  "Finder"\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 ConfigurationUtility\cf2  
\b to
\b0  (
\i \cf3 application file
\i0 \cf2  
\i \cf8 id
\i0 \cf2  \cf4 targetAppID\cf2 )\
			
\b set
\b0  \cf4 ConfigurationUtility\cf2  
\b to
\b0  \cf4 ConfigurationUtility\cf2  
\b as
\b0  
\i \cf3 alias
\i0 \cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b tell
\b0 \
		
\b set
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2  
\b to
\b0  \cf8 POSIX path\cf2  
\b of
\b0  \cf4 ConfigurationUtility\cf2 \
		
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  \cf4 ConfigurationUtilityPOSIXPath\cf2  & "Contents/MacOS/cfgutil"\
		
\b return
\b0  \cf4 cfgutil\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b on
\b0  
\b error
\b0  \cf4 errorMessage\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  \cf4 errorMessage\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b try
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGgetUtilityPath\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGnamesOfDefaultProperties\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGnamesOfDefaultProperties()"\
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  ((\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & " help get-property | grep ' - '")\
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
	
\b set
\b0  \cf4 namesOfDefaultProperties\cf2  
\b to
\b0  
\b every
\b0  
\i \cf3 paragraph
\i0 \cf2  
\b of
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 namesOfDefaultProperties\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 thisItem\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 namesOfDefaultProperties\cf2 \
		
\b set
\b0  \cf4 x\cf2  
\b to
\b0  
\b \cf7 offset
\b0 \cf2  \cf7 of\cf2  "-" \cf7 in\cf2  \cf4 thisItem\cf2 \
		
\b set
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 namesOfDefaultProperties\cf2  
\b to
\b0  (
\i \cf3 text
\i0 \cf2  
\b from
\b0  (\cf4 x\cf2  + 2) 
\b to
\b0  -1 
\b of
\b0  \cf4 thisItem\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	
\b return
\b0  \cf4 namesOfDefaultProperties\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGnamesOfDefaultProperties\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGtitlesOfDefaultProperties\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGtitlesOfDefaultProperties()"\
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	
\b set
\b0  \cf4 namesOfDefaultProperties\cf2  
\b to
\b0  \cf6 CNFGnamesOfDefaultProperties\cf2 ()\
	
\b set
\b0  
\b the
\b0  \cf4 titlesList\cf2  
\b to
\b0  \{\}\
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 namesOfDefaultProperties\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  
\b the
\b0  \cf4 titlesList\cf2  
\b to
\b0  
\b my
\b0  \cf6 camelCaseToWordCase\cf2 (
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 namesOfDefaultProperties\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	
\b return
\b0  \cf4 titlesList\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGtitlesOfDefaultProperties\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGtitlesOfSpecifiedProperties\cf2 (\cf4 namesOfSpecifiedProperties\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGtitlesOfSpecifiedProperties(namesOfSpecifiedProperties)"\
	
\b set
\b0  
\b the
\b0  \cf4 titlesList\cf2  
\b to
\b0  \{\}\
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 namesOfSpecifiedProperties\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  
\b the
\b0  \cf4 titlesList\cf2  
\b to
\b0  
\b my
\b0  \cf6 camelCaseToWordCase\cf2 (
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 namesOfSpecifiedProperties\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	
\b return
\b0  \cf4 titlesList\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGtitlesOfSpecifiedProperties\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGsetupAssistantSkips\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGsetupAssistantSkips()"\
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  ((\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & " help prepare | grep 'skip-' | sed -e 's/^[ 	]*//'")\
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
	
\b set
\b0  \cf4 namesOfDefaultProperties\cf2  
\b to
\b0  
\b every
\b0  
\i \cf3 paragraph
\i0 \cf2  
\b of
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	
\b return
\b0  \cf4 namesOfDefaultProperties\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGsetupAssistantSkips\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGcommandUtilityHelp\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGcommandUtilityHelp()"\
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	
\b tell
\b0  
\i \cf3 application
\i0 \cf2  "Terminal"\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b \cf3 activate
\b0 \cf2 \
		
\b set
\b0  \cf4 thisTab\cf2  
\b to
\b0  
\b \cf3 do script
\b0 \cf2  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "help"\
		
\b set
\b0  \cf8 current settings\cf2  
\b of
\b0  \cf4 thisTab\cf2  
\b to
\b0  
\i \cf3 settings set
\i0 \cf2  "Man Page"\
		
\b set
\b0  \cf8 custom title\cf2  
\b of
\b0  \cf4 thisTab\cf2  
\b to
\b0  "cfgutil Help"\
		
\b \cf3 delay
\b0 \cf2  0.5\
		
\b \cf3 do script
\b0 \cf2  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "help get-property" \cf3 in\cf2  \cf4 thisTab\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b tell
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGcommandUtilityHelp\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* HANDLERS FOR IDENTIFYING CONNECTED DEVICES *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGconnectedDevices\cf2 (\cf4 shouldReturnResultsAsRecords\cf2  
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGconnectedDevices(shouldReturnResultsAsRecords as boolean)"\
	
\b my
\b0  \cf6 CNFGvaluesOfSpecifiedProperties\cf2 ("all", \{"ECID", "deviceClass", "deviceType", "name"\}, \cf4 shouldReturnResultsAsRecords\cf2 )\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGconnectedDevices\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGdevicesMatchingSpecifiedClass\cf2 (\cf4 className\cf2 , \cf4 shouldReturnResultsAsRecords\cf2  
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGdevicesMatchingSpecifiedClass(className, shouldReturnResultsAsRecords as boolean)"\
	
\b if
\b0  \cf4 className\cf2  
\b is not
\b0  
\b in
\b0  \{"iPad", "iPhone", "iPod", "AppleTV"\} 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  "\'94" & \cf4 className\cf2  & "\'94 is not a valid device class name."\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b return
\b0  (\cf6 CNFGdevicesMatchingPropertyWithValue\cf2 ("deviceClass", \cf4 className\cf2 , \cf4 shouldReturnResultsAsRecords\cf2 ))\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGdevicesMatchingSpecifiedClass\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGdevicesMatchingPropertyWithValue\cf2 (\cf4 specifiedPropertyName\cf2 , \cf4 specifiedPropertyValue\cf2 , \cf4 shouldReturnResultsAsRecords\cf2  
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGdevicesMatchingPropertyWithValue(specifiedPropertyName, specifiedPropertyValue, shouldReturnResultsAsRecords as boolean)"\
	\cf5 (* LOCATE ALL DEVICES WHOSE SPECIFIED PROPERTY MATCHES THE SPECIFIED VALUE *)\cf2 \
	\cf5 -- return property values in standard string form\cf2 \
	
\b set
\b0  \cf4 namesOfDefaultProperties\cf2  
\b to
\b0  \cf6 CNFGnamesOfDefaultProperties\cf2 ()\
	
\b if
\b0  \cf4 specifiedPropertyName\cf2  
\b is not
\b0  
\b in
\b0  \cf4 namesOfDefaultProperties\cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  ("\'93" & \cf4 specifiedPropertyName\cf2  & "\'94" & ((
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("INVALID_PROPERTY")) & \cf4 defaultPropertiesTitlesString\cf2 ))\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- check for properties whose values are dictionaries\cf2 \
		
\b if
\b0  \cf4 specifiedPropertyName\cf2  
\b is
\b0  "installedApps" 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("PROPERTY_NOT_SUPPORTED_2_APPS"))\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b if
\b0  \cf4 specifiedPropertyName\cf2  
\b is
\b0  "systemApps" 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("PROPERTY_NOT_SUPPORTED_2_SYSTEMAPPS"))\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 (* EXECUTE QUERY *)\cf2 \
		
\b set
\b0  \cf4 basePropertiesList\cf2  
\b to
\b0  \{"ECID", "deviceClass", "deviceType", "name"\}\
		
\b copy
\b0  \cf4 basePropertiesList\cf2  
\b to
\b0  \cf4 searchPropertiesList\cf2 \
		
\b if
\b0  \cf4 specifiedPropertyName\cf2  
\b is not
\b0  
\b in
\b0  \cf4 basePropertiesList\cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  
\b the
\b0  \cf4 searchPropertiesList\cf2  
\b to
\b0  \cf4 specifiedPropertyName\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b set
\b0  \cf4 searchPropertiesString\cf2  
\b to
\b0  
\b its
\b0  \cf6 stringFromList\cf2 :\cf4 searchPropertiesList\cf2  \cf6 usingDelimiter\cf2 :" "\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
		\cf5 -- get all properties for all connected devices\cf2 \
		
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "--format plist -f get " & \cf4 searchPropertiesString\cf2 \
		
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
		\cf5 -- execute query\cf2 \
		
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- CREATE A PROPERTY LIST OBJECT FROM RETURNED TEXT\cf2 \
		
\b set
\b0  \cf4 anNSString\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 queryResult\cf2 \
		
\b set
\b0  \cf4 theNSDictionary\cf2  
\b to
\b0  \cf4 anNSString's\cf2  \cf6 propertyList\cf2 ()\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 (* PARSE PROPERTY LIST *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- GET DEVICE LIST OF DEVICE ECIDs\cf2 \
		
\b set
\b0  \cf4 deviceECIDs\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Devices") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
		
\b if
\b0  \cf4 deviceECIDs\cf2  
\b is
\b0  \{\} 
\b then
\b0  
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("NO_CONNECTED_DEVICES"))\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- GET OUTPUT DICTIONARY\cf2 \
		
\b set
\b0  \cf4 outputDictionary\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Output")\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- GET ERROR DICTIONARY FROM OUTPUT DICTIONARY AND CHECK FOR ERRORS AND LOG\cf2 \
		
\b set
\b0  \cf4 errorDictionary\cf2  
\b to
\b0  (\cf4 outputDictionary's\cf2  \cf6 valueForKey\cf2 :"Errors")\
		
\b if
\b0  \cf4 errorDictionary\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b repeat
\b0  
\b with
\b0  \cf4 q\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 q\cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
				
\b set
\b0  \cf4 aErrorDictionary\cf2  
\b to
\b0  (\cf4 errorDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisECID\cf2 )\
				
\b if
\b0  \cf4 aErrorDictionary's\cf2  \cf6 |count|\cf2 () 
\b is
\b0  0 
\b then
\b0  \cf5 -- no errors\cf2 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					\cf5 -- do nothing\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b else
\b0  \cf5 -- log the error and device ID and continue processing device list\cf2 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  \cf4 theseErrorKeys\cf2  
\b to
\b0  (\cf4 aErrorDictionary's\cf2  \cf6 allKeys\cf2 ()) 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
					
\b repeat
\b0  
\b with
\b0  \cf4 w\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 theseErrorKeys\cf2 \
\pard\pardeftab560\li3920\fi-3920\slleading22\pardirnatural\partightenfactor0
\cf2 						
\b set
\b0  \cf4 thisErrorKey\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 w\cf2  
\b of
\b0  \cf4 theseErrorKeys\cf2 \
						
\b set
\b0  \cf4 thisErrorItemDictionary\cf2  
\b to
\b0  (\cf4 aErrorDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisErrorKey\cf2 )\
						
\b set
\b0  \cf4 thisErrorMessage\cf2  
\b to
\b0  (\cf4 thisErrorItemDictionary's\cf2  \cf6 valueForKey\cf2 :"Message")\
						
\b \cf3 log
\b0 \cf2  ("ERROR: " & \cf4 thisECID\cf2  & ": " & (\cf4 thisErrorKey\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ) & ": " & (\cf4 thisErrorMessage\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ))\
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b end
\b0  
\b repeat
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b repeat
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 			\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			\cf5 -- REMOVE ERROR DICTIONARY FROM OUTPUT DICTIONARY\cf2 \
			
\b set
\b0  \cf4 outputDictionary\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSMutableDictionary's\cf2  \cf6 dictionaryWithDictionary\cf2 :\cf4 outputDictionary\cf2 \
			\cf4 outputDictionary's\cf2  \cf6 removeObjectForKey\cf2 :"Errors"\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 (* DO COMPARISION ON LIST OF DEVICES *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- ITERATE THE DEVICES\cf2 \
		
\b set
\b0  \cf4 matchedECIDs\cf2  
\b to
\b0  \{\}\
		
\b set
\b0  \cf4 matchedDeviceClasses\cf2  
\b to
\b0  \{\}\
		
\b set
\b0  \cf4 matchedDeviceTypes\cf2  
\b to
\b0  \{\}\
		
\b set
\b0  \cf4 matchedDeviceNames\cf2  
\b to
\b0  \{\}\
		
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
			\cf5 -- get the output dictionary for this device\cf2 \
			
\b set
\b0  \cf4 thisItem\cf2  
\b to
\b0  (\cf4 outputDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisECID\cf2 )\
			\cf5 -- get the value of the specified property for this device\cf2 \
			
\b set
\b0  \cf4 propertyValue\cf2  
\b to
\b0  (\cf4 thisItem's\cf2  \cf6 valueForKey\cf2 :\cf4 specifiedPropertyName\cf2 )\
			\cf5 -- check to see if the device\'92s value of specified property is equal to the passed property value\cf2 \
			
\b if
\b0  ((\cf4 propertyValue's\cf2  \cf6 isEqualTo\cf2 :\cf4 specifiedPropertyValue\cf2 ) 
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 ) 
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 matchedECIDs\cf2  
\b to
\b0  (\cf4 thisItem's\cf2  \cf6 valueForKey\cf2 :"ECID") 
\b as
\b0  
\i \cf3 text
\i0 \cf2 \
				
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 matchedDeviceClasses\cf2  
\b to
\b0  (\cf4 thisItem's\cf2  \cf6 valueForKey\cf2 :"deviceClass") 
\b as
\b0  
\i \cf3 text
\i0 \cf2 \
				
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 matchedDeviceTypes\cf2  
\b to
\b0  (\cf4 thisItem's\cf2  \cf6 valueForKey\cf2 :"deviceType") 
\b as
\b0  
\i \cf3 text
\i0 \cf2 \
				
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 matchedDeviceNames\cf2  
\b to
\b0  (\cf4 thisItem's\cf2  \cf6 valueForKey\cf2 :"name") 
\b as
\b0  
\i \cf3 text
\i0 \cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b repeat
\b0 \
		
\b if
\b0  \cf4 matchedECIDs\cf2  
\b is
\b0  \{\} 
\b then
\b0  
\b error
\b0  "No devices matched the specified property:value pairing."\
		
\b if
\b0  \cf4 shouldReturnResultsAsRecords\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 listOfRecords\cf2  
\b to
\b0  \{\}\
			
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 matchedECIDs\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 thisValueList\cf2  
\b to
\b0  \{
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 matchedECIDs\cf2 , 
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 matchedDeviceClasses\cf2 , 
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 matchedDeviceTypes\cf2 , 
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 matchedDeviceNames\cf2 \}\
				
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 listOfRecords\cf2  
\b to
\b0  (
\b my
\b0  \cf6 recordFromLabels\cf2 :\cf4 basePropertiesList\cf2  \cf6 andValues\cf2 :\cf4 thisValueList\cf2 )\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b repeat
\b0 \
			
\b return
\b0  \cf4 listOfRecords\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b return
\b0  \{(
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 matchedECIDs\cf2 ), \cf4 basePropertiesList\cf2 , \cf4 matchedECIDs\cf2 , \cf4 matchedDeviceClasses\cf2 , \cf4 matchedDeviceTypes\cf2 , \cf4 matchedDeviceNames\cf2 \}\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGdevicesMatchingPropertyWithValue\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* PROPERTY HANDLERS FOR ALL DEVICES *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGvaluesOfSpecifiedProperties\cf2 (\cf4 specifiedECIDs\cf2 , \cf4 listOfPropertyNames\cf2 , \cf4 shouldReturnResultsAsRecords\cf2  
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGvaluesOfSpecifiedProperties(specifiedECIDs, listOfPropertyNames, shouldReturnResultsAsRecords as boolean)"\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (* EXAMPLE PROPERTY LIST EXPECTED AS RESULT OF QUERY *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (*\
	<?xml version="1.0" encoding="UTF-8"?>\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\
<plist version="1.0">\
<dict>\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf5 	<key>Command</key>\
	<string>get</string>\
	<key>Devices</key>\
	<array>\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf5 		<string>0xB498C20090826</string>\
		<string>0xD694C109B0826</string>\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf5 	</array>\
	<key>Output</key>\
	<dict>\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf5 		<key>0xB498C20090826</key>\
		<dict>\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf5 			<key>ECID</key>\
			<string>0xB498C20090826</string>\
			<key>isSupervised</key>\
			<false/>\
			<key>serialNumber</key>\
			<string>DLXNK6FUG5VW</string>\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf5 		</dict>\
		<key>0xD694C109B0826</key>\
		<dict>\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf5 			<key>ECID</key>\
			<string>0xD694C109B0826</string>\
			<key>isSupervised</key>\
			<true/>\
			<key>serialNumber</key>\
			<string>DLXNK5Z1G5VW</string>\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf5 		</dict>\
		<key>Errors</key>\
		<dict>\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf5 			<key>0xB498C20090826</key>\
			<dict>\
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf5 				<key>IMEI</key>\
				<dict>\
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf5 					<key>Code</key>\
					<integer>-402653163</integer>\
					<key>Domain</key>\
					<string>com.apple.configurator.MobileDeviceKit.amd.error</string>\
					<key>FailureReason</key>\
					<string></string>\
					<key>Message</key>\
					<string>The value is missing.</string>\
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf5 				</dict>\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf5 			</dict>\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf5 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf5 			<key>0xD694C109B0826</key>\
			<dict/>\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf5 		</dict>\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf5 	</dict>\
	<key>Type</key>\
	<string>CommandOutput</string>\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 </dict>\
</plist>\
*)\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- theseECIDs can be a single ECID string, a list of ECID strings, or one of the \'93all\'94 indicators\cf2 \
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "ALL" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "--format plist -f"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
		
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "--format plist" & \cf8 space\cf2  & \cf4 devicesECIDString\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b if
\b0  
\b the
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 listOfPropertyNames\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 list
\i0 \cf2  
\b then
\b0  
\b set
\b0  \cf4 listOfPropertyNames\cf2  
\b to
\b0  \cf4 listOfPropertyNames\cf2  
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
	\cf5 -- THIS HANDLER RETURNS THE INDICATED PROPERTIES FOR ALL OF THE CURRENTLY CONNECTED DEVICES\cf2 \
	
\b set
\b0  \cf4 namesOfDefaultProperties\cf2  
\b to
\b0  \cf6 CNFGnamesOfDefaultProperties\cf2 ()\
	\cf5 -- verify passed properties\cf2 \
	
\b set
\b0  \cf4 validProperties\cf2  
\b to
\b0  \{\}\
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 listOfPropertyNames\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 thisProperty\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 listOfPropertyNames\cf2 \
		
\b if
\b0  \cf4 thisProperty\cf2  
\b is
\b0  
\b in
\b0  \cf4 namesOfDefaultProperties\cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 validProperties\cf2  
\b to
\b0  \cf4 thisProperty\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			\cf5 -- combine default properties into string\cf2 \
			
\b set
\b0  \cf4 defaultPropertiesNamesString\cf2  
\b to
\b0  (
\b my
\b0  \cf6 stringFromList\cf2 :\cf4 namesOfDefaultProperties\cf2  \cf6 usingDelimiter\cf2 :", ")\
			
\b error
\b0  ("\'93" & \cf4 thisProperty\cf2  & "\'94" & ((
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("INVALID_PROPERTY")) & \cf4 defaultPropertiesNamesString\cf2 ))\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	
\b if
\b0  \cf4 validProperties\cf2  
\b is
\b0  \{\} 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- combine default properties into string\cf2 \
		
\b set
\b0  \cf4 defaultPropertiesNamesString\cf2  
\b to
\b0  (
\b my
\b0  \cf6 stringFromList\cf2 :\cf4 namesOfDefaultProperties\cf2  \cf6 usingDelimiter\cf2 :", ")\
		
\b error
\b0  ((
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("NO_VALID_PROPERTIES")) & \cf4 defaultPropertiesNamesString\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	\cf5 -- check for properties whose values are dictionaries\cf2 \
	
\b if
\b0  \cf4 validProperties\cf2  
\b contains
\b0  "installedApps" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("PROPERTY_NOT_SUPPORTED_APPS"))\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf4 validProperties\cf2  
\b contains
\b0  "systemApps" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("PROPERTY_NOT_SUPPORTED_SYSTEMAPPS"))\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	\cf5 -- CONSTRUCT COMMAND STRING	\cf2 \
	\cf5 -- combine valid passed properties into string\cf2 \
	
\b set
\b0  \cf4 propertiesNamesString\cf2  
\b to
\b0  
\b my
\b0  \cf6 stringFromList\cf2 :\cf4 validProperties\cf2  \cf6 usingDelimiter\cf2 :" "\
	
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  \cf4 commandString\cf2  & \cf8 space\cf2  & "get" & \cf8 space\cf2  & \cf4 propertiesNamesString\cf2 \
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
	\cf5 -- execute query\cf2 \
	
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- CREATE A PROPERTY LIST OBJECT FROM QUERY RESULT TEXT\cf2 \
	
\b set
\b0  \cf4 anNSString\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 queryResult\cf2 \
	
\b set
\b0  \cf4 theNSDictionary\cf2  
\b to
\b0  \cf4 anNSString's\cf2  \cf6 propertyList\cf2 ()\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (* PARSE PROPERTY LIST *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- GET DEVICE LIST OF ECIDs\cf2 \
	
\b set
\b0  \cf4 deviceECIDs\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Devices") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
	
\b if
\b0  \cf4 deviceECIDs\cf2  
\b is
\b0  \{\} 
\b then
\b0  
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("NO_CONNECTED_DEVICES"))\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- GET OUTPUT DICTIONARY\cf2 \
	
\b set
\b0  \cf4 outputDictionary\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Output")\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- GET ERROR DICTIONARY FROM OUTPUT DICTIONARY AND CHECK FOR ERRORS AND LOG THEM\cf2 \
	
\b set
\b0  \cf4 errorDictionary\cf2  
\b to
\b0  (\cf4 outputDictionary's\cf2  \cf6 valueForKey\cf2 :"Errors")\
	
\b if
\b0  \cf4 errorDictionary\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b repeat
\b0  
\b with
\b0  \cf4 q\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 q\cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
			
\b set
\b0  \cf4 aErrorDictionary\cf2  
\b to
\b0  (\cf4 errorDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisECID\cf2 )\
			
\b if
\b0  \cf4 aErrorDictionary's\cf2  \cf6 |count|\cf2 () 
\b is
\b0  0 
\b then
\b0  \cf5 -- no errors\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				\cf5 -- do nothing\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b else
\b0  \cf5 -- log the error and device ID and continue processing device list\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 theseErrorKeys\cf2  
\b to
\b0  (\cf4 aErrorDictionary's\cf2  \cf6 allKeys\cf2 ()) 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
				
\b repeat
\b0  
\b with
\b0  \cf4 w\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 theseErrorKeys\cf2 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  \cf4 thisErrorKey\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 w\cf2  
\b of
\b0  \cf4 theseErrorKeys\cf2 \
					
\b set
\b0  \cf4 thisErrorItemDictionary\cf2  
\b to
\b0  (\cf4 aErrorDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisErrorKey\cf2 )\
					
\b set
\b0  \cf4 thisErrorMessage\cf2  
\b to
\b0  (\cf4 thisErrorItemDictionary's\cf2  \cf6 valueForKey\cf2 :"Message")\
					
\b \cf3 log
\b0 \cf2  ("ERROR: " & \cf4 thisECID\cf2  & ": " & (\cf4 thisErrorKey\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ) & ": " & (\cf4 thisErrorMessage\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ))\
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b end
\b0  
\b repeat
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b repeat
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- REMOVE ERROR DICTIONARY FROM OUTPUT DICTIONARY\cf2 \
		
\b set
\b0  \cf4 outputDictionary\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSMutableDictionary's\cf2  \cf6 dictionaryWithDictionary\cf2 :\cf4 outputDictionary\cf2 \
		\cf4 outputDictionary's\cf2  \cf6 removeObjectForKey\cf2 :"Errors"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Error logging completed."\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- PARSE OUTPUT DICTIONARY AND RETURN THE RESULTS\cf2 \
	
\b if
\b0  \cf4 shouldReturnResultsAsRecords\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- return a list of records\cf2 \
		
\b return
\b0  (\cf4 outputDictionary's\cf2  \cf6 allValues\cf2 ()) 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- RETRIEVE THE PROPERTY VALUES FROM THE OUTPUT DICTIONARIES FOR EACH DEVICE\cf2 \
		\cf5 -- create the result list\cf2 \
		
\b set
\b0  \cf4 resultsList\cf2  
\b to
\b0  \{\cf4 validProperties\cf2 \}\
		\cf5 -- iterate the properties to retrieve\cf2 \
		
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 validProperties\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 aPropertyTitle\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 validProperties\cf2 \
			
\b set
\b0  \cf4 aPropertyValues\cf2  
\b to
\b0  \{\}\
			\cf5 -- iterate the devices\cf2 \
			
\b repeat
\b0  
\b with
\b0  \cf4 q\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 q\cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
				\cf5 -- get the output dictionary for this device\cf2 \
				
\b set
\b0  \cf4 aDeviceDictionary\cf2  
\b to
\b0  (\cf4 outputDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisECID\cf2 )\
				\cf5 -- get the property value for this device\cf2 \
				
\b set
\b0  \cf4 thisPropertyValue\cf2  
\b to
\b0  (\cf4 aDeviceDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 aPropertyTitle\cf2 )\
				
\b \cf3 log
\b0 \cf2  ("thisECID: " & \cf4 thisECID\cf2  & \cf8 space\cf2  & "aPropertyTitle: " & \cf4 aPropertyTitle\cf2 ) 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
				
\b if
\b0  \cf4 aPropertyTitle\cf2  
\b is
\b0  
\b in
\b0  \{"configurationProfiles", "provisioningProfiles"\} 
\b then
\b0  \cf5 -- list of records\cf2 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  \cf4 profileNames\cf2  
\b to
\b0  \{\}\
					
\b repeat
\b0  
\b with
\b0  \cf4 z\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 thisPropertyValue\cf2 \
\pard\pardeftab560\li3920\fi-3920\slleading22\pardirnatural\partightenfactor0
\cf2 						
\b set
\b0  \cf4 thisEntry\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 z\cf2  
\b of
\b0  \cf4 thisPropertyValue\cf2 \
						\cf5 (* (NSArray) \{\{displayName:"MDM Profile", identifier:"com.jamfsoftware.encrypted-profile-service", version:1\}, \{displayName:"EBCWiFi", identifier:"com.ebcdemo.EBCWiFi", version:1\}\} *)\cf2 \
						
\b set
\b0  \cf4 aProfileName\cf2  
\b to
\b0  (\cf4 thisEntry's\cf2  \cf6 valueForKey\cf2 :"displayName")\
						
\b \cf3 log
\b0 \cf2  \cf4 aProfileName\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
						
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 profileNames\cf2  
\b to
\b0  (\cf4 aProfileName\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 )\
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b end
\b0  
\b repeat
\b0 \
					
\b set
\b0  \cf4 thisPropertyValue\cf2  
\b to
\b0  \cf4 profileNames\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b else
\b0  
\b if
\b0  \cf4 aPropertyTitle\cf2  
\b is
\b0  
\b in
\b0  \{"tags"\} 
\b then
\b0  \cf5 -- list of records\cf2 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					\cf5 (* (NSArray) \{\{name:"Orange, UUID:"70122B47-7BD9-4CFC-B91E-9C905EC3FF23"\}, \{name:"Blue, UUID:"70125B47-7FD9-4CRC-B91E-9C905EC3FF34"\}\} *)\cf2 \
					
\b set
\b0  \cf4 tagNames\cf2  
\b to
\b0  \{\}\
					
\b repeat
\b0  
\b with
\b0  \cf4 z\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 thisPropertyValue\cf2 \
\pard\pardeftab560\li3920\fi-3920\slleading22\pardirnatural\partightenfactor0
\cf2 						
\b set
\b0  \cf4 thisEntry\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 z\cf2  
\b of
\b0  \cf4 thisPropertyValue\cf2 \
						
\b set
\b0  \cf4 aTagName\cf2  
\b to
\b0  (\cf4 thisEntry's\cf2  \cf6 valueForKey\cf2 :"name")\
						
\b \cf3 log
\b0 \cf2  \cf4 aTagName\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
						
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 tagNames\cf2  
\b to
\b0  (\cf4 aTagName\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 )\
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b end
\b0  
\b repeat
\b0 \
					
\b set
\b0  \cf4 thisPropertyValue\cf2  
\b to
\b0  \cf4 tagNames\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b end
\b0  
\b if
\b0 \
				
\b if
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 thisPropertyValue\cf2  
\b is
\b0  
\i \cf3 list
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 aPropertyValues\cf2  
\b to
\b0  \cf4 thisPropertyValue\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b else
\b0  
\b if
\b0  \cf4 thisPropertyValue\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 aPropertyValues\cf2  
\b to
\b0  
\i \cf3 missing value
\i0 \cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b else
\b0 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 aPropertyValues\cf2  
\b to
\b0  \cf4 thisPropertyValue\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b repeat
\b0 \
			\cf5 -- add the resulting list of values for this property to the results list\cf2 \
			
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 resultsList\cf2  
\b to
\b0  \cf4 aPropertyValues\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b repeat
\b0 \
		\cf5 -- insert the device count at the start of the results list\cf2 \
		
\b set
\b0  
\b the
\b0  
\b beginning
\b0  
\b of
\b0  
\b the
\b0  \cf4 resultsList\cf2  
\b to
\b0  (
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 ) 
\b as
\b0  
\i \cf3 integer
\i0 \cf2 \
		\cf5 -- return the cleaned results list\cf2 \
		
\b return
\b0  \cf4 resultsList\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGvaluesOfSpecifiedProperties\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGdeviceNames\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGdeviceNames()"\
	
\b return
\b0  (
\b last
\b0  
\i \cf3 item
\i0 \cf2  
\b of
\b0  (
\b my
\b0  \cf6 CNFGvaluesOfSpecifiedProperties\cf2 ("all", \{"name"\}, 
\i \cf8 false
\i0 \cf2 )))\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGdeviceNames\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGdeviceECIDs\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGdeviceECIDs()"\
	
\b return
\b0  (
\b last
\b0  
\i \cf3 item
\i0 \cf2  
\b of
\b0  (
\b my
\b0  \cf6 CNFGvaluesOfSpecifiedProperties\cf2 ("all", \{"ECID"\}, 
\i \cf8 false
\i0 \cf2 )))\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGdeviceECIDs\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGdeviceUDIDs\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGdeviceUDIDs()"\
	
\b return
\b0  (
\b last
\b0  
\i \cf3 item
\i0 \cf2  
\b of
\b0  (
\b my
\b0  \cf6 CNFGvaluesOfSpecifiedProperties\cf2 ("all", \{"UDID"\}, 
\i \cf8 false
\i0 \cf2 )))\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGdeviceUDIDs\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGdeviceSerialNumbers\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGdeviceSerialNumbers()"\
	
\b return
\b0  (
\b last
\b0  
\i \cf3 item
\i0 \cf2  
\b of
\b0  (
\b my
\b0  \cf6 CNFGvaluesOfSpecifiedProperties\cf2 ("all", \{"serialNumber"\}, 
\i \cf8 false
\i0 \cf2 )))\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGdeviceSerialNumbers\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGchooseFromConnectedDevices\cf2 (\cf4 thisPrompt\cf2 , \cf4 shouldAllowMultipleSelections\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGchooseFromConnectedDevices(thisPrompt, shouldAllowMultipleSelections)"\
	\cf5 -- get information for all connected devices\cf2 \
	\cf5 -- get device data as lists of properties instead of records\cf2 \
	
\b copy
\b0  \cf6 CNFGconnectedDevices\cf2 (
\i \cf8 false
\i0 \cf2 ) 
\b to
\b0  \'ac\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\{\cf4 deviceCount\cf2  \'ac\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			, \cf4 propertyTitles\cf2  \'ac\
			, \cf4 theseDeviceECIDs\cf2  \'ac\
			, \cf4 theseDeviceClasses\cf2  \'ac\
			, \cf4 theseDeviceTypes\cf2  \'ac\
			, \cf4 theseDeviceNames\cf2 \}\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- if single device, then return ECID\cf2 \
	
\b if
\b0  \cf4 deviceCount\cf2  
\b is
\b0  1 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  \cf4 shouldAllowMultipleSelections\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b return
\b0  \cf4 theseDeviceECIDs\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b return
\b0  
\i \cf3 item
\i0 \cf2  1 
\b of
\b0  \cf4 theseDeviceECIDs\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	\cf5 -- create identifying string for choose dialog, like: ACME iPad 0223 (ECID: 0x001B5ACB53C24)\cf2 \
	
\b set
\b0  \cf4 theseDeviceStrings\cf2  
\b to
\b0  \{\}\
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  \cf4 deviceCount\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  (
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 theseDeviceNames\cf2 ) 
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 theseDeviceStrings\cf2  
\b to
\b0  (
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 theseDeviceNames\cf2 ) & " (ECID: " & (
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 theseDeviceECIDs\cf2 ) & ")"\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	
\b if
\b0  \cf4 theseDeviceStrings\cf2  
\b is
\b0  \{\} 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  "No readable devices are connected to this computer."\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b tell
\b0  
\i \cf3 application
\i0 \cf2  (\cf8 POSIX path\cf2  
\b of
\b0  (
\b \cf7 path to
\b0 \cf2  
\i \cf9 frontmost application
\i0 \cf2 ))\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b \cf3 activate
\b0 \cf2 \
		
\b if
\b0  \cf4 shouldAllowMultipleSelections\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 chooseResult\cf2  
\b to
\b0  (
\b \cf7 choose from list
\b0 \cf2  \cf4 theseDeviceStrings\cf2  \cf7 with prompt\cf2  \cf4 thisPrompt\cf2  
\b with
\b0  \cf7 multiple selections allowed\cf2 )\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 chooseResult\cf2  
\b to
\b0  (
\b \cf7 choose from list
\b0 \cf2  \cf4 theseDeviceStrings\cf2  \cf7 with prompt\cf2  \cf4 thisPrompt\cf2 )\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b tell
\b0 \
	
\b if
\b0  \cf4 chooseResult\cf2  
\b is
\b0  
\i \cf8 false
\i0 \cf2  
\b then
\b0  
\b error
\b0  \cf3 number\cf2  -128\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- extract ECIDs from the display strings\cf2 \
	
\b set
\b0  \cf4 ECIDsOfChosenDevices\cf2  
\b to
\b0  \{\}\
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 chooseResult\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 thisItemString\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 chooseResult\cf2 \
		\cf5 --> "ACME iPad 0223 (ECID: 0x001B5ACB53C24)"\cf2 \
		
\b set
\b0  \cf4 reverseString\cf2  
\b to
\b0  (
\b the
\b0  \cf8 reverse\cf2  
\b of
\b0  (
\b every
\b0  
\i \cf3 character
\i0 \cf2  
\b of
\b0  \cf4 thisItemString\cf2 )) 
\b as
\b0  
\i \cf3 text
\i0 \cf2 \
		\cf5 --> ")42C35BCA5B100x0 :DICE( 3220 daPi EMCA"\cf2 \
		
\b set
\b0  \cf4 x\cf2  
\b to
\b0  
\b the
\b0  
\b \cf7 offset
\b0 \cf2  \cf7 of\cf2  \cf8 space\cf2  \cf7 in\cf2  \cf4 reverseString\cf2 \
		\cf5 --> 17\cf2 \
		
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  (
\i \cf3 text
\i0 \cf2  
\b from
\b0  -(\cf4 x\cf2  - 1) 
\b to
\b0  -2 
\b of
\b0  \cf4 thisItemString\cf2 )\
		\cf5 --> "0x001B5ACB53C24"\cf2 \
		
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 ECIDsOfChosenDevices\cf2  
\b to
\b0  \cf4 thisECID\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- return the resulting ECIDs\cf2 \
	
\b if
\b0  \cf4 shouldAllowMultipleSelections\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  \cf4 ECIDsOfChosenDevices\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf3 item
\i0 \cf2  1 
\b of
\b0  \cf4 ECIDsOfChosenDevices\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGchooseFromConnectedDevices\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* PROPERTY HANDLERS FOR SPECIFIED DEVICES *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGnamesOfSpecifiedDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGnamesOfSpecifiedDevices(specifiedECIDs)"\
	
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "ALL" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  \cf6 CNFGdeviceNames\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- create command string\cf2 \
		
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
		
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
		
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "--format plist" & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "get name"\
		
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
		\cf5 -- execute command\cf2 \
		
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
		\cf5 -- process results\cf2 \
		
\b set
\b0  \cf4 anNSString\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 queryResult\cf2 \
		
\b set
\b0  \cf4 theNSDictionary\cf2  
\b to
\b0  \cf4 anNSString's\cf2  \cf6 propertyList\cf2 ()\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- GET DEVICE LIST OF DEVICE ECIDs\cf2 \
		
\b set
\b0  \cf4 deviceECIDs\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Devices") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
		
\b if
\b0  \cf4 deviceECIDs\cf2  
\b is
\b0  \{\} 
\b then
\b0  
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("NO_CONNECTED_DEVICES"))\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- GET OUTPUT DICTIONARY\cf2 \
		
\b set
\b0  \cf4 outputDictionary\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Output")\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- GET ERROR DICTIONARY FROM OUTPUT DICTIONARY AND CHECK FOR ERRORS AND LOG\cf2 \
		
\b set
\b0  \cf4 errorDictionary\cf2  
\b to
\b0  (\cf4 outputDictionary's\cf2  \cf6 valueForKey\cf2 :"Errors")\
		
\b if
\b0  \cf4 errorDictionary\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b repeat
\b0  
\b with
\b0  \cf4 q\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 q\cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
				
\b set
\b0  \cf4 aErrorDictionary\cf2  
\b to
\b0  (\cf4 errorDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisECID\cf2 )\
				
\b if
\b0  \cf4 aErrorDictionary's\cf2  \cf6 |count|\cf2 () 
\b is
\b0  0 
\b then
\b0  \cf5 -- no errors\cf2 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					\cf5 -- do nothing\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b else
\b0  \cf5 -- log the error and device ID and continue processing device list\cf2 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  \cf4 theseErrorKeys\cf2  
\b to
\b0  (\cf4 aErrorDictionary's\cf2  \cf6 allKeys\cf2 ()) 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
					
\b repeat
\b0  
\b with
\b0  \cf4 w\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 theseErrorKeys\cf2 \
\pard\pardeftab560\li3920\fi-3920\slleading22\pardirnatural\partightenfactor0
\cf2 						
\b set
\b0  \cf4 thisErrorKey\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 w\cf2  
\b of
\b0  \cf4 theseErrorKeys\cf2 \
						
\b set
\b0  \cf4 thisErrorItemDictionary\cf2  
\b to
\b0  (\cf4 aErrorDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisErrorKey\cf2 )\
						
\b set
\b0  \cf4 thisErrorMessage\cf2  
\b to
\b0  (\cf4 thisErrorItemDictionary's\cf2  \cf6 valueForKey\cf2 :"Message")\
						
\b \cf3 log
\b0 \cf2  ("ERROR: " & \cf4 thisECID\cf2  & ": " & (\cf4 thisErrorKey\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ) & ": " & (\cf4 thisErrorMessage\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ))\
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b end
\b0  
\b repeat
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b repeat
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 			\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			\cf5 -- REMOVE ERROR DICTIONARY FROM OUTPUT DICTIONARY\cf2 \
			
\b set
\b0  \cf4 outputDictionary\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSMutableDictionary's\cf2  \cf6 dictionaryWithDictionary\cf2 :\cf4 outputDictionary\cf2 \
			\cf4 outputDictionary's\cf2  \cf6 removeObjectForKey\cf2 :"Errors"\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 dictionaryElements\cf2  
\b to
\b0  \cf4 outputDictionary's\cf2  \cf6 allValues\cf2 ()\
		
\b set
\b0  \cf4 propertyValues\cf2  
\b to
\b0  (\cf4 dictionaryElements's\cf2  \cf6 valueForKey\cf2 :"name") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  \cf4 propertyValues\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGnamesOfSpecifiedDevices\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGspecifiedPropertyValueForSpecifiedDevice\cf2 (\cf4 thisPropertyName\cf2 , \cf4 specifiedECID\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGspecifiedPropertyValueForSpecifiedDevice(thisPropertyName, specifiedECID)"\
	\cf5 -- return property values in standard string form\cf2 \
	
\b set
\b0  \cf4 namesOfDefaultProperties\cf2  
\b to
\b0  \cf6 CNFGnamesOfDefaultProperties\cf2 ()\
	
\b if
\b0  \cf4 thisPropertyName\cf2  
\b is
\b0  
\b in
\b0  \cf4 namesOfDefaultProperties\cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- check for properties whose values are dictionaries\cf2 \
		
\b if
\b0  \cf4 thisPropertyName\cf2  
\b is
\b0  "installedApps" 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("PROPERTY_NOT_SUPPORTED_APPS"))\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b if
\b0  \cf4 thisPropertyName\cf2  
\b is
\b0  "systemApps" 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("PROPERTY_NOT_SUPPORTED_SYSTEMAPPS"))\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
		
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  ((\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-e " & \cf4 specifiedECID\cf2  & " get " & \cf4 thisPropertyName\cf2 )\
		
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
		
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
		
\b if
\b0  \cf4 thisPropertyName\cf2  
\b is
\b0  
\b in
\b0  \cf4 defaultBooleanProperties\cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b if
\b0  \cf4 queryResult\cf2  
\b is
\b0  
\b in
\b0  \{"0", "1"\} 
\b then
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b return
\b0  (\cf4 queryResult\cf2  
\b as
\b0  
\i \cf3 integer
\i0 \cf2  
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 )\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b else
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b return
\b0  \cf4 queryResult\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b return
\b0  \cf4 queryResult\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  ("\'93" & \cf4 thisPropertyName\cf2  & "\'94" & (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("INVALID_PROPERTY")))\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGspecifiedPropertyValueForSpecifiedDevice\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGorgPropsOfSpecifiedDevice\cf2 (\cf4 thisECID\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGorgPropsOfSpecifiedDevice(thisECID)"\
	
\b set
\b0  \cf4 propertiesList\cf2  
\b to
\b0  \{"organizationName", "organizationAddress", "organizationDepartment", "organizationEmail", "organizationPhone"\}\
	
\b set
\b0  
\b the
\b0  \cf4 propertiesTitlesString\cf2  
\b to
\b0  "organizationName organizationAddress organizationDepartment organizationEmail organizationPhone"\
	\cf5 -- get path to utility\cf2 \
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	\cf5 -- perform query\cf2 \
	
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "--format plist -e " & \cf4 thisECID\cf2  & " get " & \cf4 propertiesTitlesString\cf2 \
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
	
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	\cf5 -- convert property list text to property list in memory\cf2 \
	
\b set
\b0  \cf4 anNSString\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 queryResult\cf2 \
	
\b set
\b0  \cf4 theNSDictionary\cf2  
\b to
\b0  \cf4 anNSString's\cf2  \cf6 propertyList\cf2 ()\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- GET DEVICE LIST OF DEVICE ECIDs\cf2 \
	
\b set
\b0  \cf4 deviceECIDs\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Devices") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
	
\b if
\b0  \cf4 deviceECIDs\cf2  
\b is
\b0  \{\} 
\b then
\b0  
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("NO_CONNECTED_DEVICES"))\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- GET OUTPUT DICTIONARY\cf2 \
	
\b set
\b0  \cf4 outputDictionary\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Output")\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- GET ERROR DICTIONARY FROM OUTPUT DICTIONARY AND CHECK FOR ERRORS AND LOG\cf2 \
	
\b set
\b0  \cf4 errorDictionary\cf2  
\b to
\b0  (\cf4 outputDictionary's\cf2  \cf6 valueForKey\cf2 :"Errors")\
	
\b if
\b0  \cf4 errorDictionary\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b repeat
\b0  
\b with
\b0  \cf4 q\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 q\cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
			
\b set
\b0  \cf4 aErrorDictionary\cf2  
\b to
\b0  (\cf4 errorDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisECID\cf2 )\
			
\b if
\b0  \cf4 aErrorDictionary's\cf2  \cf6 |count|\cf2 () 
\b is
\b0  0 
\b then
\b0  \cf5 -- no errors\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				\cf5 -- do nothing\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b else
\b0  \cf5 -- log the error and device ID and continue processing device list\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 theseErrorKeys\cf2  
\b to
\b0  (\cf4 aErrorDictionary's\cf2  \cf6 allKeys\cf2 ()) 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
				
\b repeat
\b0  
\b with
\b0  \cf4 w\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 theseErrorKeys\cf2 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  \cf4 thisErrorKey\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 w\cf2  
\b of
\b0  \cf4 theseErrorKeys\cf2 \
					
\b set
\b0  \cf4 thisErrorItemDictionary\cf2  
\b to
\b0  (\cf4 aErrorDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisErrorKey\cf2 )\
					
\b set
\b0  \cf4 thisErrorMessage\cf2  
\b to
\b0  (\cf4 thisErrorItemDictionary's\cf2  \cf6 valueForKey\cf2 :"Message")\
					
\b \cf3 log
\b0 \cf2  ("ERROR: " & \cf4 thisECID\cf2  & ": " & (\cf4 thisErrorKey\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ) & ": " & (\cf4 thisErrorMessage\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ))\
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b end
\b0  
\b repeat
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b repeat
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- REMOVE ERROR DICTIONARY FROM OUTPUT DICTIONARY\cf2 \
		
\b set
\b0  \cf4 outputDictionary\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSMutableDictionary's\cf2  \cf6 dictionaryWithDictionary\cf2 :\cf4 outputDictionary\cf2 \
		\cf4 outputDictionary's\cf2  \cf6 removeObjectForKey\cf2 :"Errors"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- parse property list for relevant section\cf2 \
	
\b set
\b0  \cf4 targetDictionary\cf2  
\b to
\b0  \cf4 outputDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisECID\cf2 \
	
\b set
\b0  
\b the
\b0  \cf4 propertyKeys\cf2  
\b to
\b0  (\cf4 targetDictionary's\cf2  \cf6 allKeys\cf2 ()) 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
	\cf5 --> \{"organizationAddress", "organizationDepartment", "organizationEmail", "organizationName", "organizationPhone"\}\cf2 \
	
\b set
\b0  
\b the
\b0  \cf4 propertyValues\cf2  
\b to
\b0  (\cf4 targetDictionary's\cf2  \cf6 allValues\cf2 ()) 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
	\cf5 --> \{"", "", "", "", ""\}\cf2 \
	
\b return
\b0  (
\b my
\b0  \cf6 recordFromLabels\cf2 :\cf4 propertyKeys\cf2  \cf6 andValues\cf2 :\cf4 propertyValues\cf2 )\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGorgPropsOfSpecifiedDevice\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGbatteryPropsOfSpecifiedDevice\cf2 (\cf4 thisECID\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGbatteryPropsOfSpecifiedDevice(thisECID)"\
	
\b set
\b0  \cf4 propertiesList\cf2  
\b to
\b0  \{"batteryCurrentCapacity", "batteryIsCharging"\}\
	
\b set
\b0  
\b the
\b0  \cf4 propertiesTitlesString\cf2  
\b to
\b0  "batteryCurrentCapacity batteryIsCharging"\
	\cf5 -- get path to utility\cf2 \
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	\cf5 -- perform query\cf2 \
	
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "--format plist -e " & \cf4 thisECID\cf2  & " get " & \cf4 propertiesTitlesString\cf2 \
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
	
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	\cf5 -- log queryResult\cf2 \
	\cf5 -- convert property list text to property list in memory\cf2 \
	
\b set
\b0  \cf4 anNSString\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 queryResult\cf2 \
	
\b set
\b0  \cf4 theNSDictionary\cf2  
\b to
\b0  \cf4 anNSString's\cf2  \cf6 propertyList\cf2 ()\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- GET DEVICE LIST OF DEVICE ECIDs\cf2 \
	
\b set
\b0  \cf4 deviceECIDs\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Devices") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
	
\b if
\b0  \cf4 deviceECIDs\cf2  
\b is
\b0  \{\} 
\b then
\b0  
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("NO_CONNECTED_DEVICES"))\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- GET OUTPUT DICTIONARY\cf2 \
	
\b set
\b0  \cf4 outputDictionary\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Output")\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- GET ERROR DICTIONARY FROM OUTPUT DICTIONARY AND CHECK FOR ERRORS AND LOG\cf2 \
	
\b set
\b0  \cf4 errorDictionary\cf2  
\b to
\b0  (\cf4 outputDictionary's\cf2  \cf6 valueForKey\cf2 :"Errors")\
	
\b if
\b0  \cf4 errorDictionary\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b repeat
\b0  
\b with
\b0  \cf4 q\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 q\cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
			
\b set
\b0  \cf4 aErrorDictionary\cf2  
\b to
\b0  (\cf4 errorDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisECID\cf2 )\
			
\b if
\b0  \cf4 aErrorDictionary's\cf2  \cf6 |count|\cf2 () 
\b is
\b0  0 
\b then
\b0  \cf5 -- no errors\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				\cf5 -- do nothing\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b else
\b0  \cf5 -- log the error and device ID and continue processing device list\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 theseErrorKeys\cf2  
\b to
\b0  (\cf4 aErrorDictionary's\cf2  \cf6 allKeys\cf2 ()) 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
				
\b repeat
\b0  
\b with
\b0  \cf4 w\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 theseErrorKeys\cf2 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  \cf4 thisErrorKey\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 w\cf2  
\b of
\b0  \cf4 theseErrorKeys\cf2 \
					
\b set
\b0  \cf4 thisErrorItemDictionary\cf2  
\b to
\b0  (\cf4 aErrorDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisErrorKey\cf2 )\
					
\b set
\b0  \cf4 thisErrorMessage\cf2  
\b to
\b0  (\cf4 thisErrorItemDictionary's\cf2  \cf6 valueForKey\cf2 :"Message")\
					
\b \cf3 log
\b0 \cf2  ("ERROR: " & \cf4 thisECID\cf2  & ": " & (\cf4 thisErrorKey\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ) & ": " & (\cf4 thisErrorMessage\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ))\
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b end
\b0  
\b repeat
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b repeat
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- REMOVE ERROR DICTIONARY FROM OUTPUT DICTIONARY\cf2 \
		
\b set
\b0  \cf4 outputDictionary\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSMutableDictionary's\cf2  \cf6 dictionaryWithDictionary\cf2 :\cf4 outputDictionary\cf2 \
		\cf4 outputDictionary's\cf2  \cf6 removeObjectForKey\cf2 :"Errors"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- parse property list for relevant section\cf2 \
	
\b set
\b0  \cf4 targetDictionary\cf2  
\b to
\b0  \cf4 outputDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisECID\cf2 \
	
\b set
\b0  
\b the
\b0  \cf4 propertyKeys\cf2  
\b to
\b0  (\cf4 targetDictionary's\cf2  \cf6 allKeys\cf2 ()) 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
	\cf5 --> \{"organizationAddress", "organizationDepartment", "organizationEmail", "organizationName", "organizationPhone"\}\cf2 \
	
\b set
\b0  
\b the
\b0  \cf4 propertyValues\cf2  
\b to
\b0  (\cf4 targetDictionary's\cf2  \cf6 allValues\cf2 ()) 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
	\cf5 --> \{"", "", "", "", ""\}\cf2 \
	
\b return
\b0  (
\b my
\b0  \cf6 recordFromLabels\cf2 :\cf4 propertyKeys\cf2  \cf6 andValues\cf2 :\cf4 propertyValues\cf2 )\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGbatteryPropsOfSpecifiedDevice\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGappsOnSpecifiedDevice\cf2 (\cf4 thisECID\cf2 , \cf4 shouldReturnResultsAsRecords\cf2  
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGappsOnSpecifiedDevice(thisECID, shouldReturnResultsAsRecords as boolean)"\
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  ((\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "--format plist -e " & \cf4 thisECID\cf2  & " get installedApps")\
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
	
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	\cf5 -- CREATE A PROPERTY LIST OBJECT FROM RETURNED TEXT\cf2 \
	
\b set
\b0  \cf4 anNSString\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 queryResult\cf2 \
	
\b set
\b0  \cf4 theNSDictionary\cf2  
\b to
\b0  \cf4 anNSString's\cf2  \cf6 propertyList\cf2 ()\
	\cf5 (* PARSE PROPERTY LIST *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- GET DEVICE LIST OF DEVICE ECIDs\cf2 \
	
\b set
\b0  \cf4 deviceECIDs\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Devices") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
	
\b if
\b0  \cf4 deviceECIDs\cf2  
\b is
\b0  \{\} 
\b then
\b0  
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("NO_CONNECTED_DEVICES"))\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- GET OUTPUT DICTIONARY\cf2 \
	
\b set
\b0  \cf4 outputDictionary\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Output")\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- GET ERROR DICTIONARY FROM OUTPUT DICTIONARY AND CHECK FOR ERRORS AND LOG\cf2 \
	
\b set
\b0  \cf4 errorDictionary\cf2  
\b to
\b0  (\cf4 outputDictionary's\cf2  \cf6 valueForKey\cf2 :"Errors")\
	
\b if
\b0  \cf4 errorDictionary\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b repeat
\b0  
\b with
\b0  \cf4 q\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 q\cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
			
\b set
\b0  \cf4 aErrorDictionary\cf2  
\b to
\b0  (\cf4 errorDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisECID\cf2 )\
			
\b if
\b0  \cf4 aErrorDictionary's\cf2  \cf6 |count|\cf2 () 
\b is
\b0  0 
\b then
\b0  \cf5 -- no errors\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				\cf5 -- do nothing\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b else
\b0  \cf5 -- log the error and device ID and continue processing device list\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 theseErrorKeys\cf2  
\b to
\b0  (\cf4 aErrorDictionary's\cf2  \cf6 allKeys\cf2 ()) 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
				
\b repeat
\b0  
\b with
\b0  \cf4 w\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 theseErrorKeys\cf2 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  \cf4 thisErrorKey\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 w\cf2  
\b of
\b0  \cf4 theseErrorKeys\cf2 \
					
\b set
\b0  \cf4 thisErrorItemDictionary\cf2  
\b to
\b0  (\cf4 aErrorDictionary's\cf2  \cf6 valueForKey\cf2 :\cf4 thisErrorKey\cf2 )\
					
\b set
\b0  \cf4 thisErrorMessage\cf2  
\b to
\b0  (\cf4 thisErrorItemDictionary's\cf2  \cf6 valueForKey\cf2 :"Message")\
					
\b \cf3 log
\b0 \cf2  ("ERROR: " & \cf4 thisECID\cf2  & ": " & (\cf4 thisErrorKey\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ) & ": " & (\cf4 thisErrorMessage\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ))\
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b end
\b0  
\b repeat
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b repeat
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- REMOVE ERROR DICTIONARY FROM OUTPUT DICTIONARY\cf2 \
		
\b set
\b0  \cf4 outputDictionary\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSMutableDictionary's\cf2  \cf6 dictionaryWithDictionary\cf2 :\cf4 outputDictionary\cf2 \
		\cf4 outputDictionary's\cf2  \cf6 removeObjectForKey\cf2 :"Errors"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b set
\b0  \cf4 outputContent\cf2  
\b to
\b0  \cf4 outputDictionary's\cf2  \cf6 allValues\cf2 ()\
	
\b set
\b0  \cf4 thisDeviceDictionary\cf2  
\b to
\b0  (\cf4 outputContent's\cf2  \cf6 objectAtIndex\cf2 :0)\
	
\b set
\b0  \cf4 appsRecords\cf2  
\b to
\b0  (\cf4 thisDeviceDictionary's\cf2  \cf6 valueForKey\cf2 :"installedApps")\
	
\b if
\b0  (
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 appsRecords\cf2 ) 
\b is
\b0  0 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 appsDisplayNames\cf2  
\b to
\b0  \{\}\
		
\b set
\b0  \cf4 appsiTunesNames\cf2  
\b to
\b0  \{\}\
		
\b set
\b0  \cf4 appsBundleVersions\cf2  
\b to
\b0  \{\}\
		
\b set
\b0  \cf4 appsIDs\cf2  
\b to
\b0  \{\}\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 appsDisplayNames\cf2  
\b to
\b0  (\cf4 appsRecords's\cf2  \cf6 valueForKey\cf2 :"displayName") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
		
\b set
\b0  \cf4 appsiTunesNames\cf2  
\b to
\b0  (\cf4 appsRecords's\cf2  \cf6 valueForKey\cf2 :"itunesName") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
		
\b set
\b0  \cf4 appsBundleVersions\cf2  
\b to
\b0  (\cf4 appsRecords's\cf2  \cf6 valueForKey\cf2 :"bundleVersion") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
		
\b set
\b0  \cf4 appsIDs\cf2  
\b to
\b0  (\cf4 appsRecords's\cf2  \cf6 valueForKey\cf2 :"bundleIdentifier") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf4 shouldReturnResultsAsRecords\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  (\cf4 appsRecords\cf2  
\b as
\b0  
\i \cf3 list
\i0 \cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 propertyLabels\cf2  
\b to
\b0  \{"displayName", "itunesName", "bundleIdentifier", "bundleVersion"\}\
		
\b set
\b0  \cf4 appCount\cf2  
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 appsDisplayNames\cf2 \
		
\b return
\b0  \{\cf4 appCount\cf2 , \cf4 propertyLabels\cf2 , \cf4 appsDisplayNames\cf2 , \cf4 appsiTunesNames\cf2 , \cf4 appsIDs\cf2 , \cf4 appsBundleVersions\cf2 \}\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGappsOnSpecifiedDevice\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* HANDLER NOT SUPPORTED *)\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGsystemAppsOnSpecifiedDevice\cf2 (\cf4 thisECID\cf2 , \cf4 shouldReturnResultsAsRecords\cf2  
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGsystemAppsOnSpecifiedDevice(thisECID, shouldReturnResultsAsRecords as boolean)"\
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  ((\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "--format plist -e " & \cf4 thisECID\cf2  & " get systemApps")\
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
	
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	\cf5 -- CREATE A PROPERTY LIST OBJECT FROM RETURNED TEXT\cf2 \
	
\b set
\b0  \cf4 anNSString\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 queryResult\cf2 \
	
\b set
\b0  \cf4 theNSDictionary\cf2  
\b to
\b0  \cf4 anNSString's\cf2  \cf6 propertyList\cf2 ()\
	\cf5 (* PARSE PROPERTY LIST *)\cf2 \
	\cf5 -- GET DEVICE LIST OF ECIDs\cf2 \
	
\b set
\b0  \cf4 theseECIDs\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Devices") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
	
\b if
\b0  \cf4 theseECIDs\cf2  
\b is
\b0  \{\} 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  "No connected devices"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 outputResult\cf2  
\b to
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"Output")\
		
\b set
\b0  \cf4 outputContent\cf2  
\b to
\b0  \cf4 outputResult's\cf2  \cf6 allValues\cf2 ()\
		
\b set
\b0  \cf4 thisDeviceDictionary\cf2  
\b to
\b0  (\cf4 outputContent's\cf2  \cf6 objectAtIndex\cf2 :0)\
		
\b set
\b0  \cf4 appsRecords\cf2  
\b to
\b0  (\cf4 thisDeviceDictionary's\cf2  \cf6 valueForKey\cf2 :"systemApps")\
		
\b if
\b0  (
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 appsRecords\cf2 ) 
\b is
\b0  0 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 appsDisplayNames\cf2  
\b to
\b0  \{\}\
			
\b set
\b0  \cf4 appsiTunesNames\cf2  
\b to
\b0  \{\}\
			
\b set
\b0  \cf4 appsBundleVersions\cf2  
\b to
\b0  \{\}\
			
\b set
\b0  \cf4 appsIDs\cf2  
\b to
\b0  \{\}\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 appsDisplayNames\cf2  
\b to
\b0  (\cf4 appsRecords's\cf2  \cf6 valueForKey\cf2 :"displayName") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
			
\b set
\b0  \cf4 appsiTunesNames\cf2  
\b to
\b0  (\cf4 appsRecords's\cf2  \cf6 valueForKey\cf2 :"itunesName") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
			
\b set
\b0  \cf4 appsBundleVersions\cf2  
\b to
\b0  (\cf4 appsRecords's\cf2  \cf6 valueForKey\cf2 :"bundleVersion") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
			
\b set
\b0  \cf4 appsIDs\cf2  
\b to
\b0  (\cf4 appsRecords's\cf2  \cf6 valueForKey\cf2 :"bundleIdentifier") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b if
\b0  \cf4 shouldReturnResultsAsRecords\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b return
\b0  (\cf4 appsRecords\cf2  
\b as
\b0  
\i \cf3 list
\i0 \cf2 )\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 propertyLabels\cf2  
\b to
\b0  \{"displayName", "itunesName", "bundleIdentifier", "bundleVersion"\}\
			
\b set
\b0  \cf4 appCount\cf2  
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 appsDisplayNames\cf2 \
			
\b return
\b0  \{\cf4 appCount\cf2 , \cf4 propertyLabels\cf2 , \cf4 appsDisplayNames\cf2 , \cf4 appsiTunesNames\cf2 , \cf4 appsIDs\cf2 , \cf4 appsBundleVersions\cf2 \}\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGsystemAppsOnSpecifiedDevice\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* COMMANDS *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGeraseSpecifiedDevices\cf2 (\cf4 specifiedECIDs\cf2 , \cf4 pathToCertificate\cf2 , \cf4 pathToPrivateKey\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGeraseSpecifiedDevices(specifiedECIDs, pathToCertificate, pathToPrivateKey)"\
	\cf5 (* Erase content and settings on devices. (supervised only) *)\cf2 \
	\cf5 -- theseECIDs can be a single ECID string, a list of ECID strings, or one of the \'93all\'94 indicators\cf2 \
	\cf5 (* REQUIRES SUPERVISION: CERTIFICATE FILE AND PRIVATE KEY FILE *)\cf2 \
	\cf5 -- get clean POSIX path\cf2 \
	
\b set
\b0  \cf4 pathToCertificate\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 pathToCertificate\cf2 )\
	
\b set
\b0  \cf4 pathToPrivateKey\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 pathToPrivateKey\cf2 )\
	\cf5 -- process items\cf2 \
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	\cf5 (* CHECK THE SUPERVISION STATE OF THE DEVICES *)\cf2 \
	
\b \cf3 log
\b0 \cf2  "Checking supervision state of the devices\'85"\
	
\b copy
\b0  \cf6 CNFGvaluesOfSpecifiedProperties\cf2 (\cf4 specifiedECIDs\cf2 , \{"ECID", "isSupervised", "serialNumber"\}, 
\i \cf8 false
\i0 \cf2 ) 
\b to
\b0  \{\cf4 deviceCount\cf2 , \cf4 propertyNames\cf2 , \cf4 deviceECIDs\cf2 , \cf4 supervisonStatuses\cf2 , \cf4 serialNumbers\cf2 \}\
	
\b set
\b0  \cf4 inputDeviceCount\cf2  
\b to
\b0  \cf4 deviceCount\cf2 \
	
\b \cf3 log
\b0 \cf2  "inputDeviceCount: " & (\cf4 inputDeviceCount\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 )\
	
\b set
\b0  \cf4 unsupervisedDeviceSerialNumbers\cf2  
\b to
\b0  \{\}\
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  \cf4 deviceCount\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  (
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 supervisonStatuses\cf2 ) 
\b is
\b0  
\i \cf8 false
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 unsupervisedDeviceSerialNumbers\cf2  
\b to
\b0  (
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 serialNumbers\cf2 )\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	
\b if
\b0  \cf4 unsupervisedDeviceSerialNumbers\cf2  
\b is
\b0  
\b not
\b0  \{\} 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 thisArray\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSArray's\cf2  \cf6 arrayWithArray\cf2 :\cf4 unsupervisedDeviceSerialNumbers\cf2 \
		
\b set
\b0  \cf4 thisString\cf2  
\b to
\b0  (\cf4 thisArray's\cf2  \cf6 componentsJoinedByString\cf2 :" \'95 ") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
		
\b error
\b0  
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("ERASE_SUPERVISION_ERROR") & \cf4 thisString\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	\cf5 (* EXECUTE THE ERASE COMMAND *)\cf2 \
	
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "ALL" 
\b then
\b0  \cf5 -- erase all devices\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- execute the erase command\cf2 \
		
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-f" & \cf8 space\cf2  & "-C " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToCertificate\cf2 ) & " -K " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToPrivateKey\cf2 ) & \cf8 space\cf2  & "erase"\
		
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
		
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- execute the erase command\cf2 \
		
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
		
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "-C " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToCertificate\cf2 ) & " -K " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToPrivateKey\cf2 ) & \cf8 space\cf2  & "erase"\
		
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
		
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	\cf5 (* WAIT FOR ALL DEVICES TO COMPLETE THE ERASURE PROCESS *)\cf2 \
	
\b \cf3 log
\b0 \cf2  "Checking for erasure to complete."\
	
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  "sleep 60"\
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
	
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 \
	
\b set
\b0  \cf4 maximumRepeats\cf2  
\b to
\b0  30\
	
\b set
\b0  \cf4 ECIDsOfDevicesThatHaveBooted\cf2  
\b to
\b0  \{\}\
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  \cf4 maximumRepeats\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  \cf4 i\cf2  
\b is
\b0  \cf4 maximumRepeats\cf2  
\b then
\b0  
\b error
\b0  "Timeout waiting for devices to erase."\
		
\b try
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			\cf5 -- (* CHECK THE STATE OF DEVICES THAT ARE NOT BOOTED\cf2 \
			
\b repeat
\b0  
\b with
\b0  \cf4 q\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 thisDeviceECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 q\cf2  
\b of
\b0  \cf4 deviceECIDs\cf2 \
				
\b if
\b0  \cf4 thisDeviceECID\cf2  
\b is not
\b0  
\b in
\b0  \cf4 ECIDsOfDevicesThatHaveBooted\cf2  
\b then
\b0 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  \cf4 bootedStatus\cf2  
\b to
\b0  \cf6 CNFGspecifiedPropertyValueForSpecifiedDevice\cf2 ("bootedState", \cf4 thisDeviceECID\cf2 )\
					
\b \cf3 log
\b0 \cf2  ("ECID: " & \cf4 thisDeviceECID\cf2  & \cf8 space\cf2  & "bootedState: " & (\cf4 bootedStatus\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ))\
					
\b if
\b0  \cf4 bootedStatus\cf2  
\b is
\b0  "Booted" 
\b then
\b0  
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 ECIDsOfDevicesThatHaveBooted\cf2  
\b to
\b0  \cf4 thisDeviceECID\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b repeat
\b0 \
			
\b if
\b0  (
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 ECIDsOfDevicesThatHaveBooted\cf2 ) 
\b is
\b0  \cf4 deviceCount\cf2  
\b then
\b0  \cf5 -- processing has completed\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				\cf5 -- give a little time to awake\cf2 \
				
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  "sleep 15"\
				
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
				
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 \
				
\b return
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b else
\b0  \cf5 -- wait\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b \cf3 log
\b0 \cf2  "Waiting\'85" & (\cf4 i\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ) & "/" & (\cf4 maximumRepeats\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 )\
				
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  "sleep 5"\
				
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
				
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b on
\b0  
\b error
\b0  \cf4 errorMessage\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b \cf3 log
\b0 \cf2  ("ERROR: " & \cf4 errorMessage\cf2 )\
			
\b \cf3 log
\b0 \cf2  "Waiting\'85" & (\cf4 i\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ) & "/" & (\cf4 maximumRepeats\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 )\
			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  "sleep 10"\
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b try
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGeraseSpecifiedDevices\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGrestoreSpecifiedDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGrestoreSpecifiedDevices(specifiedECIDs)"\
	
\b try
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- process items\cf2 \
		
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
		\cf5 -- theseECIDs can be a single ECID string, a list of ECID strings, or one of the \'93all\'94 indicators\cf2 \
		
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "ALL" 
\b then
\b0  \cf5 -- erase all devices\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-f" & \cf8 space\cf2  & "restore"\
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "restore"\
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b if
\b0  \cf4 queryResult\cf2  
\b contains
\b0  "succeeded on 0 devices." 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b return
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b return
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b on
\b0  
\b error
\b0  \cf4 errorMessage\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 x\cf2  
\b to
\b0  
\b the
\b0  
\b \cf7 offset
\b0 \cf2  \cf7 of\cf2  "NSLocalizedDescription=" \cf7 in\cf2  \cf4 errorMessage\cf2 \
		
\b set
\b0  \cf4 errorMsg\cf2  
\b to
\b0  (
\i \cf3 text
\i0 \cf2  
\b from
\b0  (\cf4 x\cf2  + (\cf8 length\cf2  
\b of
\b0  "NSLocalizedDescription=")) 
\b to
\b0  -2 
\b of
\b0  \cf4 errorMessage\cf2 )\
		
\b error
\b0  \cf4 errorMsg\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b try
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGrestoreSpecifiedDevices\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGprepareSpecifiedDevices\cf2 (\cf4 specifiedECIDs\cf2 , \cf4 shouldEnrollInMDM\cf2  
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 , \cf4 pathToMDMCertificate\cf2 , \cf4 MDMEnrollmentURL\cf2 , \cf4 shouldSuperviseDevices\cf2  
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 , \cf4 allowiTunesPairing\cf2 , \cf4 pathToSupervisionCertificate\cf2 , \cf4 supervisionOrgName\cf2 , \cf4 supervisionOrgAddress\cf2 , \cf4 supervisionOrgDept\cf2 , \cf4 supervisionOrgPhone\cf2 , \cf4 supervisionOrgEmail\cf2 , \cf4 listOfSetupAssistantSkips\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGprepareSpecifiedDevices(specifiedECIDs, shouldEnrollInMDM as boolean, pathToMDMCertificate, MDMEnrollmentURL, shouldSuperviseDevices as boolean, allowiTunesPairing, pathToSupervisionCertificate, supervisionOrgName, supervisionOrgAddress, supervisionOrgDept, supervisionOrgPhone, supervisionOrgEmail, listOfSetupAssistantSkips)"\
	
\b set
\b0  \cf4 setupSuppressionOptions\cf2  
\b to
\b0  \cf4 listOfSetupAssistantSkips\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (* IDENTIFY DEVICES *)\cf2 \
	\cf5 -- locate the command line utility\cf2 \
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	\cf5 -- prepare all devices, or specified devices\cf2 \
	
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "ALL" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 commandStringOpening\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-f prepare"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- create a string enumerating devices: -e thisECID -e thisECID -e thisECID\'85\cf2 \
		
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
		
\b set
\b0  \cf4 commandStringOpening\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "prepare"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b \cf3 log
\b0 \cf2  ("prepare: commandStringOpening: " & \cf4 commandStringOpening\cf2 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (* MDM OPTIONS *)\cf2 \
	
\b if
\b0  \cf4 shouldEnrollInMDM\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- DEP service URL of an MDM server to enroll in (required)\cf2 \
		
\b if
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 MDMEnrollmentURL\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 text
\i0 \cf2  
\b then
\b0  
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("MISSING_MDM_URL"))\
		
\b set
\b0  \cf4 MDMcommandString\cf2  
\b to
\b0  "--mdm-url" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 MDMEnrollmentURL\cf2 \
		
\b if
\b0  \cf4 pathToMDMCertificate\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			\cf5 -- DER-encoded certificate of the MDM server\cf2 \
			
\b set
\b0  \cf4 pathToMDMCertificate\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 pathToMDMCertificate\cf2 )\
			
\b set
\b0  \cf4 MDMcommandString\cf2  
\b to
\b0  \cf4 MDMcommandString\cf2  & \cf8 space\cf2  & "--anchor-cert" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToMDMCertificate\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b \cf3 log
\b0 \cf2  ("prepare: MDMcommandString: " & \cf4 MDMcommandString\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (* SUPERVISION OPTIONS *)\cf2 \
	
\b if
\b0  \cf4 shouldSuperviseDevices\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 supervisonCommandString\cf2  
\b to
\b0  "-s"\
		\cf5 -- check iTunes pairing status\cf2 \
		
\b if
\b0  \cf4 allowiTunesPairing\cf2  
\b is
\b0  
\i \cf8 false
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 supervisonCommandString\cf2  
\b to
\b0  \cf4 supervisonCommandString\cf2  & \cf8 space\cf2  & "-p"\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		\cf5 -- path to certificate (required)\cf2 \
		
\b set
\b0  \cf4 pathToSupervisionCertificate\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 pathToSupervisionCertificate\cf2 )\
		
\b set
\b0  \cf4 supervisonCommandString\cf2  
\b to
\b0  \cf4 supervisonCommandString\cf2  & \cf8 space\cf2  & "--host-cert" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToSupervisionCertificate\cf2 \
		\cf5 -- company name\cf2 \
		
\b if
\b0  \cf4 supervisionOrgName\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 supervisionOrgName\cf2  
\b is
\b0  
\b not
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 supervisonCommandString\cf2  
\b to
\b0  \cf4 supervisonCommandString\cf2  & \cf8 space\cf2  & "--name" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 supervisionOrgName\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		\cf5 -- company address\cf2 \
		
\b if
\b0  \cf4 supervisionOrgAddress\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 supervisionOrgAddress\cf2  
\b is
\b0  
\b not
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 supervisonCommandString\cf2  
\b to
\b0  \cf4 supervisonCommandString\cf2  & \cf8 space\cf2  & "--address" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 supervisionOrgAddress\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		\cf5 -- company department\cf2 \
		\cf5 -- NOT YET IMPLEMENTED\cf2 \
		
\b set
\b0  \cf4 supervisionOrgDept\cf2  
\b to
\b0  
\i \cf3 missing value
\i0 \cf2 \
		\cf5 (*\
		if supervisionOrgDept is not missing value or supervisionOrgDept is not "" then\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf5 			set supervisonCommandString to supervisonCommandString & space & "--department" & space & quoted form of supervisionOrgDept\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf5 		end if\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 *)\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- company phone\cf2 \
		
\b if
\b0  \cf4 supervisionOrgPhone\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 supervisionOrgPhone\cf2  
\b is
\b0  
\b not
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 supervisonCommandString\cf2  
\b to
\b0  \cf4 supervisonCommandString\cf2  & \cf8 space\cf2  & "--phone" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 supervisionOrgPhone\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		\cf5 -- company email\cf2 \
		
\b if
\b0  \cf4 supervisionOrgEmail\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 supervisionOrgEmail\cf2  
\b is
\b0  
\b not
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 supervisonCommandString\cf2  
\b to
\b0  \cf4 supervisonCommandString\cf2  & \cf8 space\cf2  & "--email" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 supervisionOrgEmail\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b \cf3 log
\b0 \cf2  ("prepare: supervisonCommandString: " & \cf4 supervisonCommandString\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (* SETUP ASSISTANT OPTIONS *)\cf2 \
	
\b if
\b0  \cf4 setupSuppressionOptions\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 setupSuppressionOptions\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 setupSuppressionOptions\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 setupSuppressionOptions\cf2  
\b to
\b0  ""\
		
\b set
\b0  \cf4 setupSurpressionString\cf2  
\b to
\b0  ""\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0  
\b if
\b0  \cf4 setupSuppressionOptions\cf2  
\b is
\b0  "all" 
\b or
\b0  \cf4 setupSuppressionOptions\cf2  
\b is
\b0  "ALL" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 allSetupSuppressionOptions\cf2  
\b to
\b0  \{"--skip-android", "--skip-appleid", "--skip-applepay", "--skip-diagnostics", "--skip-language", "--skip-location", "--skip-passcode", "--skip-region", "--skip-restore", "--skip-siri", "--skip-touchid", "--skip-zoom"\}\
		
\b set
\b0  \cf4 setupSurpressionString\cf2  
\b to
\b0  (
\b my
\b0  \cf6 stringFromList\cf2 :\cf4 allSetupSuppressionOptions\cf2  \cf6 usingDelimiter\cf2 :" ")\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0  \cf5 -- construct the suppression options string from passed options\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 setupSurpressionString\cf2  
\b to
\b0  (
\b my
\b0  \cf6 stringFromList\cf2 :\cf4 setupSuppressionOptions\cf2  \cf6 usingDelimiter\cf2 :" ")\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf4 setupSurpressionString\cf2  
\b is
\b0  
\b not
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b \cf3 log
\b0 \cf2  ("prepare: setupSurpressionString: " & \cf4 setupSurpressionString\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (* CONSTRUCT MASTER COMMAND STRING *)\cf2 \
	
\b set
\b0  \cf4 masterCommandString\cf2  
\b to
\b0  \cf4 commandStringOpening\cf2 \
	
\b if
\b0  \cf4 shouldEnrollInMDM\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 masterCommandString\cf2  
\b to
\b0  \cf4 masterCommandString\cf2  & \cf8 space\cf2  & \cf4 MDMcommandString\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf4 shouldSuperviseDevices\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 masterCommandString\cf2  
\b to
\b0  \cf4 masterCommandString\cf2  & \cf8 space\cf2  & \cf4 supervisonCommandString\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf4 setupSurpressionString\cf2  
\b is
\b0  
\b not
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 masterCommandString\cf2  
\b to
\b0  \cf4 masterCommandString\cf2  & \cf8 space\cf2  & \cf4 setupSurpressionString\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b \cf3 log
\b0 \cf2  ("masterCommandString: " & \cf4 masterCommandString\cf2 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (* EXECUTE THE COMMAND *)\cf2 \
	
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 masterCommandString\cf2 )\
	
\b if
\b0  \cf4 queryResult\cf2  
\b contains
\b0  "succeeded on 0 devices." 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGprepareSpecifiedDevices\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGprepareDevicesUsingAutomatedEnrollment\cf2 (\cf4 specifiedECIDs\cf2 , \cf4 userName\cf2 , \cf4 passWordForAccount\cf2 , \cf4 mobileWiFiProfilePath\cf2 , \cf4 targetLanguageCode\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 , \cf4 targetLocaleCode\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- cfgutil -f prepare --dep --language en --locale en_US\cf2 \
	
\b if
\b0  \cf4 userName\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 passWordForAccount\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 userName\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 passWordForAccount\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 shouldImplementUserNameAndPassword\cf2  
\b to
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 shouldImplementUserNameAndPassword\cf2  
\b to
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b \cf3 log
\b0 \cf2  ("shouldImplementUserNameAndPassword: " & \cf4 shouldImplementUserNameAndPassword\cf2 )\
	\cf5 -- CHECK THE INDICATED WIFI PROFILE FILE\cf2 \
	
\b if
\b0  \cf4 mobileWiFiProfilePath\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 mobileWiFiProfilePath\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- error (my getLocalizedStringForKey("DEP_MISSING_INPUT_ERROR"))\cf2 \
		
\b error
\b0  "The \'93CNFGprepareDevicesUsingAutomatedEnrollment\'94 handler requires a path to an existing WiFi mobile configuration profile file."\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf6 CNFGcheckForItemExistence\cf2 (\cf4 mobileWiFiProfilePath\cf2 ) 
\b is
\b0  
\i \cf8 false
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  "The \'93CNFGprepareDevicesUsingAutomatedEnrollment\'94 handler requires a path to an existing WiFi mobile configuration profile file."\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf6 CNFGgetUTIFor\cf2 (\cf4 mobileWiFiProfilePath\cf2 ) 
\b is
\b0  
\b not
\b0  "com.apple.mobileconfig" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  "The \'93CNFGprepareDevicesUsingAutomatedEnrollment\'94 handler requires a path to an existing WiFi mobile configuration profile file."\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b set
\b0  \cf4 mobileWiFiProfilePath\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 mobileWiFiProfilePath\cf2 )\
	\cf5 (* IDENTIFY DEVICES *)\cf2 \
	\cf5 -- locate the command line utility\cf2 \
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	\cf5 -- prepare all devices, or specified devices\cf2 \
	
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "ALL" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  \cf4 shouldImplementUserNameAndPassword\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 prepareCommandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-f prepare" & \cf8 space\cf2  & "--dep" & \cf8 space\cf2  & "--dep-mdm-username" & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 userName\cf2 ) & \cf8 space\cf2  & "--dep-mdm-password" & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 passWordForAccount\cf2 ) & \cf8 space\cf2  & "--language" & \cf8 space\cf2  & \cf4 targetLanguageCode\cf2  & \cf8 space\cf2  & "--locale" & \cf8 space\cf2  & \cf4 targetLocaleCode\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 prepareCommandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-f prepare" & \cf8 space\cf2  & "--dep" & \cf8 space\cf2  & "--language" & \cf8 space\cf2  & \cf4 targetLanguageCode\cf2  & \cf8 space\cf2  & "--locale" & \cf8 space\cf2  & \cf4 targetLocaleCode\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b set
\b0  \cf4 profileCommandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-f install-profile" & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 mobileWiFiProfilePath\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- create a string enumerating devices: -e thisECID -e thisECID -e thisECID\'85\cf2 \
		
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
		
\b if
\b0  \cf4 shouldImplementUserNameAndPassword\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 prepareCommandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "prepare" & \cf8 space\cf2  & "--dep" & \cf8 space\cf2  & "--dep-mdm-username" & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 userName\cf2 ) & \cf8 space\cf2  & "--dep-mdm-password" & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 passWordForAccount\cf2 ) & \cf8 space\cf2  & "--language" & \cf8 space\cf2  & \cf4 targetLanguageCode\cf2  & \cf8 space\cf2  & "--locale" & \cf8 space\cf2  & \cf4 targetLocaleCode\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 prepareCommandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "prepare" & \cf8 space\cf2  & "--dep" & \cf8 space\cf2  & "--language" & \cf8 space\cf2  & \cf4 targetLanguageCode\cf2  & \cf8 space\cf2  & "--locale" & \cf8 space\cf2  & \cf4 targetLocaleCode\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b set
\b0  \cf4 profileCommandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "install-profile" & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 mobileWiFiProfilePath\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b try
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b \cf3 log
\b0 \cf2  ("Attempting to write profile\'85")\
		
\b \cf3 log
\b0 \cf2  ("profile: profileCommandString: " & \cf4 profileCommandString\cf2 )\
		
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 profileCommandString\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b on
\b0  
\b error
\b0  \cf4 errorMessage\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b \cf3 log
\b0 \cf2  ("profile attempt: " & \cf4 errorMessage\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b try
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 delay
\b0 \cf2  30 \cf5 -- allow network to reconnect\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  ("Attempting to prepare\'85")\
	
\b \cf3 log
\b0 \cf2  ("prepare: prepareCommandString: " & \cf4 prepareCommandString\cf2 )\
	
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 prepareCommandString\cf2 )\
	
\b if
\b0  \cf4 queryResult\cf2  
\b contains
\b0  "succeeded on 0 devices." 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGprepareDevicesUsingAutomatedEnrollment\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGrenameSpecifiedDevice\cf2 (\cf4 specifiedECID\cf2 , \cf4 newName\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGrenameSpecifiedDevice(specifiedECID, newName)"\
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  ((\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-e " & \cf4 specifiedECID\cf2  & " rename " & \cf8 quoted form\cf2  
\b of
\b0  \cf4 newName\cf2 )\
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
	
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	
\b if
\b0  \cf4 queryResult\cf2  
\b contains
\b0  "succeeded on 0 devices." 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGrenameSpecifiedDevice\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGrenameSpecifiedDevicesUsingNumericSuffix\cf2 (\cf4 specifiedECIDs\cf2 , \cf4 baseName\cf2  
\b as
\b0  
\i \cf3 text
\i0 \cf2 , \cf4 startingNumber\cf2  
\b as
\b0  
\i \cf3 integer
\i0 \cf2 , \cf4 minimumNumericLength\cf2  
\b as
\b0  
\i \cf3 integer
\i0 \cf2 , \cf4 numericSuffixSeparator\cf2  
\b as
\b0  
\i \cf3 text
\i0 \cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGrenameSpecifiedDevicesUsingNumericSuffix(specifiedECIDs, baseName as text, startingNumber as integer, minimumNumericLength as integer, numericSuffixSeparator as text)"\
	
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "ALL" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b copy
\b0  \cf6 CNFGconnectedDevices\cf2 (
\i \cf8 false
\i0 \cf2 ) 
\b to
\b0  \{\cf4 deviceCount\cf2 , \cf4 propertyTitles\cf2 , \cf4 specifiedECIDs\cf2 , \cf4 theseDeviceClasses\cf2 , \cf4 theseDeviceTypes\cf2 , \cf4 theseDeviceNames\cf2 \}\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b set
\b0  \cf4 renamedDeviceRecords\cf2  
\b to
\b0  \{\}\
	
\b set
\b0  \cf4 thisIndex\cf2  
\b to
\b0  \cf4 startingNumber\cf2 \
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 specifiedECIDs\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 specifiedECIDs\cf2 \
		\cf5 -- add leading zeros if indicated and necessary\cf2 \
		
\b if
\b0  \cf4 minimumNumericLength\cf2  
\b is
\b0  0 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 thisIncrementString\cf2  
\b to
\b0  \cf4 thisIndex\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 numberOfLeadingZeros\cf2  
\b to
\b0  \cf4 minimumNumericLength\cf2  - (\cf8 length\cf2  
\b of
\b0  (\cf4 thisIndex\cf2  
\b as
\b0  
\i \cf3 text
\i0 \cf2 ))\
			
\b set
\b0  \cf4 thisIncrementString\cf2  
\b to
\b0  \cf4 thisIndex\cf2 \
			
\b if
\b0  \cf4 numberOfLeadingZeros\cf2  
\b is
\b0  
\b greater than
\b0  
\b or
\b0  
\b equal to
\b0  1 
\b then
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b repeat
\b0  \cf4 numberOfLeadingZeros\cf2  
\b times
\b0 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  \cf4 thisIncrementString\cf2  
\b to
\b0  "0" & \cf4 thisIncrementString\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b end
\b0  
\b repeat
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b set
\b0  \cf4 newDeviceName\cf2  
\b to
\b0  (\cf4 baseName\cf2  & \cf4 numericSuffixSeparator\cf2  & \cf4 thisIncrementString\cf2 ) 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
		
\b \cf3 log
\b0 \cf2  ("newDeviceName: " & \cf4 newDeviceName\cf2 )\
		
\b set
\b0  \cf4 commandResult\cf2  
\b to
\b0  \cf6 CNFGrenameSpecifiedDevice\cf2 (\cf4 thisECID\cf2 , \cf4 newDeviceName\cf2 )\
		
\b if
\b0  \cf4 commandResult\cf2  
\b is
\b0  
\i \cf8 false
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b error
\b0  ((
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("DEVICE_NOT_RENAMED")) & \cf4 thisECID\cf2 )\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 renamedDeviceRecords\cf2  
\b to
\b0  (
\b my
\b0  \cf6 recordFromLabels\cf2 :\{"ECID", "name"\} \cf6 andValues\cf2 :\{\cf4 thisECID\cf2 , \cf4 newDeviceName\cf2 \})\
			
\b set
\b0  \cf4 thisIndex\cf2  
\b to
\b0  \cf4 thisIndex\cf2  + 1\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	
\b return
\b0  \cf4 renamedDeviceRecords\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGrenameSpecifiedDevicesUsingNumericSuffix\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* INSTALLATION HANDLERS *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGinstallProfileOnSpecifiedDevices\cf2 (\cf4 specifiedECIDs\cf2 , \cf4 pathToProfile\cf2 , \cf4 pathToCertificate\cf2 , \cf4 pathToPrivateKey\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGinstallProfileOnSpecifiedDevices(specifiedECIDs, pathToProfile, pathToCertificate, pathToPrivateKey)"\
	
\b set
\b0  \cf4 pathToProfile\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 pathToProfile\cf2 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b if
\b0  \cf4 pathToCertificate\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 pathToCertificate\cf2  
\b is
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b then
\b0  \cf5 -- install on all devices\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-f install-profile" & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToProfile\cf2 )\
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
			
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "install-profile" & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToProfile\cf2 )\
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 (* SILENT INSTALLATION REQUIRES SUPERVISION: CERTIFICATE FILE AND PRIVATE KEY FILE *)\cf2 \
		
\b set
\b0  \cf4 pathToCertificate\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 pathToCertificate\cf2 )\
		
\b set
\b0  \cf4 pathToPrivateKey\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 pathToPrivateKey\cf2 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 		\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b then
\b0  \cf5 -- install on all devices\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-f" & \cf8 space\cf2  & "-C " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToCertificate\cf2 ) & \cf8 space\cf2  & "-K " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToPrivateKey\cf2 ) & \cf8 space\cf2  & "install-profile" & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToProfile\cf2 )\
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
			
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "-C " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToCertificate\cf2 ) & \cf8 space\cf2  & "-K " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToPrivateKey\cf2 ) & \cf8 space\cf2  & "install-profile" & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToProfile\cf2 )\
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf4 queryResult\cf2  
\b contains
\b0  "succeeded on 0 devices." 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGinstallProfileOnSpecifiedDevices\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGinstallDocumentOnSpecifiedDevices\cf2 (\cf4 specifiedECIDs\cf2 , \cf4 pathToDocument\cf2 , \cf4 relatedApplicationiOSID\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGinstallDocumentOnSpecifiedDevices(specifiedECIDs, pathToDocument, relatedApplicationiOSID)"\
	\cf5 -- get clean POSIX path\cf2 \
	
\b set
\b0  \cf4 pathToDocument\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 pathToDocument\cf2 )\
	\cf5 --if pathToDocument ends with "/" then set pathToDocument to text 1 thru -2 of pathToDocument\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (* NOTE: CURRENTLY PHOTOS ARE NOT TRANSFERABLE TO THE iOS USER LIBRARY. USE 3rd-PARTY APPS INSTEAD *)\cf2 \
	
\b if
\b0  \cf4 relatedApplicationiOSID\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 relatedApplicationiOSID\cf2  
\b is
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- get file extension\cf2 \
		
\b set
\b0  \cf4 thisPath\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 pathToDocument\cf2 \
		
\b set
\b0  \cf4 thisFileExtension\cf2  
\b to
\b0  (\cf4 thisPath's\cf2  \cf6 pathExtension\cf2 ()) 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
		
\b set
\b0  \cf4 relatedApplicationiOSID\cf2  
\b to
\b0  
\b my
\b0  \cf6 appleiOSAppIDForFile\cf2 (\cf4 pathToDocument\cf2 )\
		
\b if
\b0  \cf4 relatedApplicationiOSID\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("NO_MATCHING_APP_PART_1") & \cf4 thisFileExtension\cf2  & \'ac\
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				\cf8 return\cf2  & \cf8 return\cf2  & 
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("NO_MATCHING_APP_PART_2"))\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "ALL" 
\b then
\b0  \cf5 -- install on all devices\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
		
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & ("-f install-doc" & \cf8 space\cf2  & \cf4 relatedApplicationiOSID\cf2  & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToDocument\cf2 ))\
		
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
		
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  
\b the
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 list
\i0 \cf2  
\b then
\b0  
\b set
\b0  \cf4 specifiedECIDs\cf2  
\b to
\b0  \cf4 specifiedECIDs\cf2  
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
		
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
		
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
		
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & (\cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "install-doc" & \cf8 space\cf2  & \cf4 relatedApplicationiOSID\cf2  & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToDocument\cf2 ))\
		
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
		
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf4 queryResult\cf2  
\b contains
\b0  "succeeded on 0 devices." 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGinstallDocumentOnSpecifiedDevices\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGinstallWallpaperOnSpecifiedDevices\cf2 (\cf4 specifiedECIDs\cf2 , \cf4 pathToCertificate\cf2 , \cf4 pathToPrivateKey\cf2 , \cf4 pathToWallpaperFile\cf2 , \cf4 usageIndicator\cf2 , \cf4 overlayText\cf2 , \cf4 shouldUseDeviceName\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGinstallWallpaperOnSpecifiedDevices(specifiedECIDs, pathToCertificate, pathToPrivateKey, pathToWallpaperFile, usageIndicator, overlayText, shouldUseDeviceName)"\
	\cf5 (* Install wallpaper image on devices. (supervised only) *)\cf2 \
	\cf5 -- theseECIDs can be a single ECID string, a list of ECID strings, or one of the \'93all\'94 indicators\cf2 \
	\cf5 (* REQUIRES SUPERVISION: CERTIFICATE FILE AND PRIVATE KEY FILE *)\cf2 \
	\cf5 -- get clean POSIX path\cf2 \
	
\b set
\b0  \cf4 pathToCertificate\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 pathToCertificate\cf2 )\
	
\b set
\b0  \cf4 pathToPrivateKey\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 pathToPrivateKey\cf2 )\
	
\b set
\b0  \cf4 pathToWallpaperFile\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 pathToWallpaperFile\cf2 )\
	
\b if
\b0  (\cf4 pathToWallpaperFile\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ) 
\b ends with
\b0  ".jpg" 
\b or
\b0  (\cf4 pathToWallpaperFile\cf2  
\b as
\b0  
\i \cf3 string
\i0 \cf2 ) 
\b ends with
\b0  ".jpeg" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		\cf5 -- do nothing\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("INCOMPATIBLE_IMAGE_FORMAT"))\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b set
\b0  \cf4 usageMethodString\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  (\cf4 usageIndicator\cf2  + 1) 
\b of
\b0  \{"lock", "home", "both"\}\
	
\b if
\b0  \cf4 shouldUseDeviceName\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0  
\b set
\b0  \cf4 overlayText\cf2  
\b to
\b0  ""\
	\cf5 -- process items\cf2 \
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "ALL" 
\b then
\b0  \cf5 -- install on all devices\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  \cf4 shouldUseDeviceName\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 specifiedECIDs\cf2  
\b to
\b0  
\b last
\b0  
\i \cf3 item
\i0 \cf2  
\b of
\b0  (\cf6 CNFGvaluesOfSpecifiedProperties\cf2 ("all", \{"ECID"\}, 
\i \cf8 false
\i0 \cf2 ))\
			
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 specifiedECIDs\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 specifiedECIDs\cf2 \
				
\b set
\b0  \cf4 thisDeviceName\cf2  
\b to
\b0  \cf6 CNFGspecifiedPropertyValueForSpecifiedDevice\cf2 ("name", \cf4 thisECID\cf2 )\
				
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-e" & \cf8 space\cf2  & \cf4 thisECID\cf2  & \cf8 space\cf2  & "-C " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToCertificate\cf2 ) & " -K " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToPrivateKey\cf2 ) & \cf8 space\cf2  & "wallpaper" & \cf8 space\cf2  & "-s" & \cf8 space\cf2  & \cf4 usageMethodString\cf2  & \cf8 space\cf2  & "-t" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 thisDeviceName\cf2  & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToWallpaperFile\cf2 \
				
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b repeat
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b if
\b0  \cf4 overlayText\cf2  
\b is
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-f" & \cf8 space\cf2  & "-C " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToCertificate\cf2 ) & " -K " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToPrivateKey\cf2 ) & \cf8 space\cf2  & "wallpaper" & \cf8 space\cf2  & "-s" & \cf8 space\cf2  & \cf4 usageMethodString\cf2  & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToWallpaperFile\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b else
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-f" & \cf8 space\cf2  & "-C " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToCertificate\cf2 ) & " -K " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToPrivateKey\cf2 ) & \cf8 space\cf2  & "wallpaper" & \cf8 space\cf2  & "-s" & \cf8 space\cf2  & \cf4 usageMethodString\cf2  & \cf8 space\cf2  & "-t" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 overlayText\cf2  & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToWallpaperFile\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b if
\b0 \
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  \cf4 shouldUseDeviceName\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 specifiedECIDs\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 specifiedECIDs\cf2 \
				
\b set
\b0  \cf4 thisDeviceName\cf2  
\b to
\b0  \cf6 CNFGspecifiedPropertyValueForSpecifiedDevice\cf2 ("name", \cf4 thisECID\cf2 )\
				
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & "-e" & \cf8 space\cf2  & \cf4 thisECID\cf2  & \cf8 space\cf2  & "-C " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToCertificate\cf2 ) & " -K " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToPrivateKey\cf2 ) & \cf8 space\cf2  & "wallpaper" & \cf8 space\cf2  & "-s" & \cf8 space\cf2  & \cf4 usageMethodString\cf2  & \cf8 space\cf2  & "-t" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 thisDeviceName\cf2  & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToWallpaperFile\cf2 \
				
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
				
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b repeat
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
			
\b if
\b0  \cf4 overlayText\cf2  
\b is
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "-C " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToCertificate\cf2 ) & " -K " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToPrivateKey\cf2 ) & \cf8 space\cf2  & "wallpaper" & \cf8 space\cf2  & "-s" & \cf8 space\cf2  & \cf4 usageMethodString\cf2  & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToWallpaperFile\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b else
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "-C " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToCertificate\cf2 ) & " -K " & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToPrivateKey\cf2 ) & \cf8 space\cf2  & "wallpaper" & \cf8 space\cf2  & "-s" & \cf8 space\cf2  & \cf4 usageMethodString\cf2  & \cf8 space\cf2  & "-t" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 overlayText\cf2  & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToWallpaperFile\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b if
\b0 \
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf4 queryResult\cf2  
\b contains
\b0  "succeeded on 0 devices." 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGinstallWallpaperOnSpecifiedDevices\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 appleiOSAppIDForFile\cf2 (\cf4 pathToDocument\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: appleiOSAppIDForFile(pathToDocument)"\
	\cf5 (* This routine uses the file extension of the passed item to return the app ID of the Apple application that handles the file *)\cf2 \
	\cf5 -- get clean POSIX path\cf2 \
	
\b set
\b0  \cf4 pathToDocument\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 pathToDocument\cf2 )\
	\cf5 -- get file extension\cf2 \
	
\b set
\b0  \cf4 thisPath\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 pathToDocument\cf2 \
	
\b set
\b0  \cf4 thisFileExtension\cf2  
\b to
\b0  (\cf4 thisPath's\cf2  \cf6 pathExtension\cf2 ()) 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
	\cf5 -- Return the appropriate iOS app ID. According to <http://support.apple.com/en-is/HT4088>\cf2 \
	\cf5 (* NOTE: currently Photos, Videos, and PhotoBooth do not support external import other than iCloud *)\cf2 \
	
\b if
\b0  \cf4 thisFileExtension\cf2  
\b is
\b0  
\b in
\b0  \{"key", "ppt", "pptx", "pps", "ppsx"\} 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  "com.apple.Keynote"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0  
\b if
\b0  \cf4 thisFileExtension\cf2  
\b is
\b0  
\b in
\b0  \{"pages", "doc", "docx", "dotx", "txt"\} 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  "com.apple.Pages"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0  
\b if
\b0  \cf4 thisFileExtension\cf2  
\b is
\b0  
\b in
\b0  \{"numbers", "xls", "xlsx", "xlt", "xltx", "xlsm", "xla", "csv"\} 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  "com.apple.Numbers"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0  
\b if
\b0  \cf4 thisFileExtension\cf2  
\b is
\b0  
\b in
\b0  \{"mov", "mp4", "m4p"\} 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  "com.apple.iMovie"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0  
\b if
\b0  \cf4 thisFileExtension\cf2  
\b is
\b0  
\b in
\b0  \{"webarchive", "html"\} 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  "com.apple.mobilesafari"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf3 missing value
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	\cf5 (*\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf5 		com.apple.Maps	Maps (Maps)\
		com.apple.mobilecal	Calendar (Calendar)\
		com.apple.mobilesafari	Safari (Safari)\
		com.apple.AppStore	App Store (App Store)\
		com.apple.mobilenotes	Notes (Notes)\
		com.apple.mobiletimer	Clock (Clock)\
		com.apple.Preferences	Settings (Settings)\
		com.apple.reminders	Reminders (Reminders)\
		com.apple.videos	Videos (Videos)\
		com.apple.MobileStore	iTunes Store (iTunes Store)\
		com.apple.mobilemail	Mail (Mail)\
		com.apple.iMovie iMovie (iMovie)\
		com.apple.Music	Music (Music)\
		com.apple.facetime	FaceTime (FaceTime)\
		com.apple.mobileslideshow	Photos (Photos)\
		com.apple.Photo-Booth	Photo Booth (Photo Booth)\
		com.apple.MobileSMS	Messages (Messages)\
		com.apple.camera	 Camera (Camera)\
		com.apple.mobilegarageband (GarageBand)\
		com.apple.itunesu (iTunes U)\
		com.beatsmusic.BeatsMusic (Beats Music)\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf5 	*)\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 appleiOSAppIDForFile\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGinstallAppsOnSpecifiedDevices\cf2 (\cf4 specifiedECIDs\cf2 , \cf4 theseAppFiles\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGinstallAppsOnSpecifiedDevices(specifiedECIDs, theseAppFiles)"\
	\cf5 (* NOTE: In order to install multiple apps, the command must be executed once for each application *)\cf2 \
	
\b if
\b0  
\b the
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 theseAppFiles\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 list
\i0 \cf2  
\b then
\b0  
\b set
\b0  \cf4 theseAppFiles\cf2  
\b to
\b0  \cf4 theseAppFiles\cf2  
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
	
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b then
\b0  \cf5 -- install on all devices\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
		
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 theseAppFiles\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 thisAppFile\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 theseAppFiles\cf2 \
			
\b set
\b0  \cf4 pathToAppFile\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 thisAppFile\cf2 )\
			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  ("-f -vvv install-app" & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToAppFile\cf2 )) 
\b as
\b0  
\i \cf3 text
\i0 \cf2 \
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b with
\b0  
\b timeout
\b0  
\b of
\b0  1800 
\i \cf3 seconds
\i0 \cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & \cf4 commandString\cf2 )\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b timeout
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b repeat
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  
\b the
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 list
\i0 \cf2  
\b then
\b0  
\b set
\b0  \cf4 specifiedECIDs\cf2  
\b to
\b0  \cf4 specifiedECIDs\cf2  
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
		
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
		
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
		
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 theseAppFiles\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 thisAppFile\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 theseAppFiles\cf2 \
			
\b set
\b0  \cf4 pathToAppFile\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 thisAppFile\cf2 )\
			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  (\cf8 quoted form\cf2  
\b of
\b0  \cf4 cfgutil\cf2 ) & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "-vvv install-app" & \cf8 space\cf2  & (\cf8 quoted form\cf2  
\b of
\b0  \cf4 pathToAppFile\cf2 )\
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b with
\b0  
\b timeout
\b0  
\b of
\b0  1800 
\i \cf3 seconds
\i0 \cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b timeout
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b repeat
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b if
\b0  \cf4 queryResult\cf2  
\b contains
\b0  "succeeded on 0 devices." 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGinstallAppsOnSpecifiedDevices\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* BACKUP AND RESTORE FROM BACKUP HANDLERS *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CFNGbackupSpecifiedDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CFNGbackupSpecifiedDevices(specifiedECIDs)"\
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b then
\b0  \cf5 -- backup all devices\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  \cf4 cfgutil\cf2  & \cf8 space\cf2  & "-f backup"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  
\b the
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 list
\i0 \cf2  
\b then
\b0  
\b set
\b0  \cf4 specifiedECIDs\cf2  
\b to
\b0  \cf4 specifiedECIDs\cf2  
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
		
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
		
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  \cf4 cfgutil\cf2  & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "backup"\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (* EXECUTE THE COMMAND *)\cf2 \
	
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	
\b if
\b0  \cf4 queryResult\cf2  
\b contains
\b0  "succeeded on 0 devices." 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CFNGbackupSpecifiedDevices\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGrestoreDevicesFromTheirBackups\cf2 (\cf4 specifiedECIDs\cf2 , \cf4 sharedPasswordForBackup\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGrestoreDevicesFromTheirBackups(specifiedECIDs, sharedPasswordForBackup)"\
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	\cf5 -- check for an \'93all devices\'94 indicator\cf2 \
	
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b then
\b0  \cf5 -- restore all devices\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  \cf4 sharedPasswordForBackup\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 sharedPasswordForBackup\cf2  
\b is
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  \cf4 cfgutil\cf2  & \cf8 space\cf2  & "-f restore-backup"\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  \cf4 cfgutil\cf2  & \cf8 space\cf2  & "-f restore-backup" & \cf8 space\cf2  & "--password" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 sharedPasswordForBackup\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  
\b the
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 list
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 specifiedECIDs\cf2  
\b to
\b0  \cf4 specifiedECIDs\cf2  
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b set
\b0  \cf4 ECIDIdentityString\cf2  
\b to
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
		
\b if
\b0  \cf4 sharedPasswordForBackup\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 sharedPasswordForBackup\cf2  
\b is
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  \cf4 cfgutil\cf2  & \cf8 space\cf2  & \cf4 ECIDIdentityString\cf2  & \cf8 space\cf2  & "restore-backup"\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  \cf4 cfgutil\cf2  & \cf8 space\cf2  & \cf4 ECIDIdentityString\cf2  & \cf8 space\cf2  & "restore-backup" & \cf8 space\cf2  & "--password" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 sharedPasswordForBackup\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (* EXECUTE THE COMMAND *)\cf2 \
	
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	
\b if
\b0  \cf4 queryResult\cf2  
\b contains
\b0  "succeeded on 0 devices." 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGrestoreDevicesFromTheirBackups\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGrestoreDevicesFromSpecifiedBackup\cf2 (\cf4 specifiedECIDs\cf2 , \cf4 targetBackupContainerName\cf2 , \cf4 backupIsEncrypted\cf2 , \cf4 passwordForBackup\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGrestoreDevicesFromSpecifiedBackup(specifiedECIDs, targetBackupContainerName, backupIsEncrypted, passwordForBackup)"\
	
\b set
\b0  \cf4 backupContainerNames\cf2  
\b to
\b0  
\b the
\b0  
\b third
\b0  
\i \cf3 item
\i0 \cf2  
\b of
\b0  (\cf6 CNFGgenerateDeviceBackupData\cf2 ())\
	
\b if
\b0  \cf4 targetBackupContainerName\cf2  
\b is not
\b0  
\b in
\b0  \cf4 backupContainerNames\cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("NO_BACKUP_MATCHING_UDID"))\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b set
\b0  \cf4 cfgutil\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGgetUtilityPath\cf2 ()\
	
\b if
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\i \cf3 missing value
\i0 \cf2  
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  \{\} 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "" 
\b or
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  "all" 
\b then
\b0  \cf5 -- restore all devices\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  \cf4 backupIsEncrypted\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  \cf4 cfgutil\cf2  & \cf8 space\cf2  & "-f restore-backup --source" & \cf8 space\cf2  & \cf4 targetBackupContainerName\cf2  & \cf8 space\cf2  & "--password" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 passwordForBackup\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  \cf4 cfgutil\cf2  & \cf8 space\cf2  & "-f restore-backup --source" & \cf8 space\cf2  & \cf4 targetBackupContainerName\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  
\b the
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 specifiedECIDs\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 list
\i0 \cf2  
\b then
\b0  
\b set
\b0  \cf4 specifiedECIDs\cf2  
\b to
\b0  \cf4 specifiedECIDs\cf2  
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
		
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  
\b my
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 specifiedECIDs\cf2 )\
		
\b if
\b0  \cf4 backupIsEncrypted\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  \cf4 cfgutil\cf2  & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "restore-backup --source" & \cf8 space\cf2  & \cf4 targetBackupContainerName\cf2  & \cf8 space\cf2  & "--password" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 passwordForBackup\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  \cf4 cfgutil\cf2  & \cf8 space\cf2  & \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "restore-backup --source " & \cf4 targetBackupContainerName\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (* EXECUTE THE COMMAND *)\cf2 \
	
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	
\b if
\b0  \cf4 queryResult\cf2  
\b contains
\b0  "succeeded on 0 devices." 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGrestoreDevicesFromSpecifiedBackup\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGbackupIDForBackupMatchingSerialNumber\cf2 (\cf4 targetSerialNumber\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGbackupIDForBackupMatchingSerialNumber(targetSerialNumber)"\
	\cf5 -- use serial number to locate UDID\cf2 \
	
\b set
\b0  \cf4 deviceInfoForBackups\cf2  
\b to
\b0  
\b last
\b0  
\i \cf3 item
\i0 \cf2  
\b of
\b0  (\cf6 CNFGgenerateDeviceBackupData\cf2 ())\
	
\b set
\b0  \cf4 backupID\cf2  
\b to
\b0  ""\
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 deviceInfoForBackups\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b copy
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 deviceInfoForBackups\cf2  
\b to
\b0  \{\cf4 thisDeviceName\cf2 , \cf4 thisDeviceUDID\cf2 , \cf4 thisDeviceSerialNumber\cf2 , \cf4 thisBackupIsEncrypted\cf2 , \cf4 thisDeviceWasPasscodeSet\cf2 , \cf4 thisBackupDate\cf2 , \cf4 thisBackupContainerName\cf2 \}\
		
\b if
\b0  \cf4 targetSerialNumber\cf2  
\b is
\b0  \cf4 thisDeviceSerialNumber\cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b \cf3 log
\b0 \cf2  \cf4 thisDeviceUDID\cf2 \
			
\b return
\b0  \cf4 thisDeviceUDID\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	
\b if
\b0  \cf4 backupID\cf2  
\b is
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("NO_BACKUP_MATCHING_SERIAL_NUMBER"))\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGbackupIDForBackupMatchingSerialNumber\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGbackupContainerNameForBackupMatchingSerialNumber\cf2 (\cf4 targetSerialNumber\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGbackupContainerNameForBackupMatchingSerialNumber(targetSerialNumber)"\
	\cf5 -- use serial number to locate the name of the container for the backup files\cf2 \
	
\b set
\b0  \cf4 deviceInfoForBackups\cf2  
\b to
\b0  
\b last
\b0  
\i \cf3 item
\i0 \cf2  
\b of
\b0  (\cf6 CNFGgenerateDeviceBackupData\cf2 ())\
	
\b set
\b0  \cf4 backupID\cf2  
\b to
\b0  ""\
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 deviceInfoForBackups\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b copy
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 deviceInfoForBackups\cf2  
\b to
\b0  \{\cf4 thisDeviceName\cf2 , \cf4 thisDeviceUDID\cf2 , \cf4 thisDeviceSerialNumber\cf2 , \cf4 thisBackupIsEncrypted\cf2 , \cf4 thisDeviceWasPasscodeSet\cf2 , \cf4 thisBackupDate\cf2 , \cf4 thisBackupContainerName\cf2 \}\
		
\b if
\b0  \cf4 targetSerialNumber\cf2  
\b is
\b0  \cf4 thisDeviceSerialNumber\cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b \cf3 log
\b0 \cf2  ("thisBackupContainerName : " & \cf4 thisBackupContainerName\cf2 )\
			
\b return
\b0  \cf4 thisBackupContainerName\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	
\b if
\b0  \cf4 backupID\cf2  
\b is
\b0  "" 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  (
\b my
\b0  \cf6 getLocalizedStringForKey\cf2 ("NO_BACKUP_MATCHING_SERIAL_NUMBER"))\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGbackupContainerNameForBackupMatchingSerialNumber\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGgenerateDeviceBackupData\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGgenerateDeviceBackupData()"\
	
\b set
\b0  \cf4 mobileDeviceBackupsFolderPOSIXPath\cf2  
\b to
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 ("~/Library/Application Support/MobileSync/Backup")\
	
\b if
\b0  \cf6 CNFGcheckForItemExistence\cf2 (\cf4 mobileDeviceBackupsFolderPOSIXPath\cf2 ) 
\b is
\b0  
\i \cf8 false
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  (\cf6 getLocalizedStringForKey\cf2 ("BACKUP_FOLDER_NOT_FOUND"))\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  ("find '" & \cf4 mobileDeviceBackupsFolderPOSIXPath\cf2  & "' -name Manifest.plist")\
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
	
\b set
\b0  \cf4 foundPropertyListFiles\cf2  
\b to
\b0  
\b every
\b0  
\i \cf3 paragraph
\i0 \cf2  
\b of
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	
\b if
\b0  \cf4 foundPropertyListFiles\cf2  
\b is
\b0  \{\} 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b error
\b0  (\cf6 getLocalizedStringForKey\cf2 ("NO_VALID_BACKUPS_FOUND"))\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 deviceCount\cf2  
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 foundPropertyListFiles\cf2 \
		
\b set
\b0  \cf4 deviceInfoForBackups\cf2  
\b to
\b0  \{\}\
		
\b set
\b0  \cf4 deviceUDIDs\cf2  
\b to
\b0  \{\}\
		
\b set
\b0  \cf4 deviceBackupContainerNames\cf2  
\b to
\b0  \{\}\
		
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  \cf4 deviceCount\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 thisPropertListFile\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 foundPropertyListFiles\cf2 \
			
\b set
\b0  \cf4 thisPathAsCocoaString\cf2  
\b to
\b0  (
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 thisPropertListFile\cf2 )\
			
\b set
\b0  \cf4 thesePathElements\cf2  
\b to
\b0  (\cf4 thisPathAsCocoaString's\cf2  \cf6 componentsSeparatedByString\cf2 :"/") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
			
\b set
\b0  \cf4 backupContainerName\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  -2 
\b of
\b0  \cf4 thesePathElements\cf2 \
			
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 deviceBackupContainerNames\cf2  
\b to
\b0  \cf4 backupContainerName\cf2 \
			
\b set
\b0  \cf4 thisPropertyListData\cf2  
\b to
\b0  (
\i \cf8 current application's
\i0 \cf2  \cf4 NSDictionary's\cf2  \cf6 dictionaryWithContentsOfFile\cf2 :\cf4 thisPropertListFile\cf2 )\
			
\b set
\b0  \cf4 backupIsEncrypted\cf2  
\b to
\b0  (\cf4 thisPropertyListData's\cf2  \cf6 valueForKey\cf2 :"IsEncrypted") 
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 \
			
\b set
\b0  \cf4 wasPasscodeSet\cf2  
\b to
\b0  (\cf4 thisPropertyListData's\cf2  \cf6 valueForKey\cf2 :"WasPasscodeSet") 
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 \
			
\b set
\b0  \cf4 backupDate\cf2  
\b to
\b0  (\cf4 thisPropertyListData's\cf2  \cf6 valueForKey\cf2 :"Date") 
\b as
\b0  
\i \cf3 date
\i0 \cf2 \
			
\b set
\b0  \cf4 thisDictionary\cf2  
\b to
\b0  (\cf4 thisPropertyListData's\cf2  \cf6 valueForKey\cf2 :"Lockdown")\
			
\b set
\b0  \cf4 deviceSerialNumber\cf2  
\b to
\b0  (\cf4 thisDictionary's\cf2  \cf6 valueForKey\cf2 :"SerialNumber") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
			
\b set
\b0  \cf4 deviceUDID\cf2  
\b to
\b0  (\cf4 thisDictionary's\cf2  \cf6 valueForKey\cf2 :"UniqueDeviceID") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
			
\b set
\b0  \cf4 deviceName\cf2  
\b to
\b0  (\cf4 thisDictionary's\cf2  \cf6 valueForKey\cf2 :"DeviceName") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
			
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 deviceUDIDs\cf2  
\b to
\b0  \cf4 deviceUDID\cf2 \
			
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 deviceInfoForBackups\cf2  
\b to
\b0  \{\cf4 deviceName\cf2 , \cf4 deviceUDID\cf2 , \cf4 deviceSerialNumber\cf2 , \cf4 backupIsEncrypted\cf2 , \cf4 wasPasscodeSet\cf2 , \cf4 backupDate\cf2 , \cf4 backupContainerName\cf2 \}\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b repeat
\b0 \
		
\b return
\b0  \{\cf4 deviceCount\cf2 , \cf4 deviceUDIDs\cf2 , \cf4 deviceBackupContainerNames\cf2 , \{"deviceName", "deviceUDID", "deviceSerialNumber", "isEncrypted", "wasPasscodeSet", "backupDate", "backupContainerName"\}, \cf4 deviceInfoForBackups\cf2 \}\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGgenerateDeviceBackupData\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 createIdentityStringForDevices\cf2 (\cf4 theseECIDs\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "createIdentityStringForDevices(theseECIDs)"\
	
\b if
\b0  
\b the
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 theseECIDs\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 list
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 theseECIDs\cf2  
\b to
\b0  \cf4 theseECIDs\cf2  
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 theseECIDs\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 thisECID\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 theseECIDs\cf2 \
		
\b \cf3 log
\b0 \cf2  ("thisECID: " & \cf4 thisECID\cf2 ) 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
		
\b if
\b0  \cf4 thisECID\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 missing value
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b if
\b0  \cf4 i\cf2  
\b is
\b0  1 
\b then
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  "-e" & \cf8 space\cf2  & \cf4 thisECID\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b else
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b set
\b0  \cf4 devicesECIDString\cf2  
\b to
\b0  \cf4 devicesECIDString\cf2  & \cf8 space\cf2  & "-e" & \cf8 space\cf2  & \cf4 thisECID\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	\cf5 -- set devicesECIDString to "-e" & space & (my stringFromList:theseECIDs usingDelimiter:" -e ")\cf2 \
	
\b \cf3 log
\b0 \cf2  ("devicesECIDString : " & \cf4 devicesECIDString\cf2 )\
	
\b return
\b0  \cf4 devicesECIDString\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 createIdentityStringForDevices\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 thisItemReference\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGreturnPOSIXPathForItem(thisItemReference)"\
	\cf5 (* This routine attempts to return a clean full POSIX path reference *)\cf2 \
	\cf5 -- check class of input\cf2 \
	
\b if
\b0  
\b the
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 thisItemReference\cf2  
\b is
\b0  
\i \cf3 alias
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 thisItemReference\cf2  
\b to
\b0  
\b the
\b0  \cf8 POSIX path\cf2  
\b of
\b0  \cf4 thisItemReference\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0  
\b if
\b0  
\b the
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 thisItemReference\cf2  
\b is
\b0  \'ab
\i \cf3 class
\i0 \cf2  furl\'bb 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 thisItemReference\cf2  
\b to
\b0  
\b the
\b0  \cf8 POSIX path\cf2  
\b of
\b0  \cf4 thisItemReference\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0  
\b if
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 thisItemReference\cf2  
\b is
\b0  
\i \cf3 string
\i0 \cf2  
\b or
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 thisItemReference\cf2  
\b is
\b0  
\i \cf3 text
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  \cf4 thisItemReference\cf2  
\b begins with
\b0  "'" 
\b and
\b0  \cf4 thisItemReference\cf2  
\b ends with
\b0  "'" 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			\cf5 -- remove single quotes\cf2 \
			
\b set
\b0  \cf4 thisItemReference\cf2  
\b to
\b0  
\i \cf3 text
\i0 \cf2  2 
\b thru
\b0  -2 
\b of
\b0  \cf4 thisItemReference\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
		
\b if
\b0  \cf4 thisItemReference\cf2  
\b begins with
\b0  "~" 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 thisCocoaString\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 thisItemReference\cf2 \
			
\b set
\b0  \cf4 thisItemReference\cf2  
\b to
\b0  (\cf4 thisCocoaString's\cf2  \cf6 stringByExpandingTildeInPath\cf2 ()) 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b return
\b0  \cf4 thisItemReference\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGcheckForItemExistence\cf2 (\cf4 POSIXPathToItem\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGcheckForItemExistence(POSIXPathToItem)"\
	\cf5 -- check validity of stored path\cf2 \
	
\b set
\b0  \cf4 POSIXPathToItem\cf2  
\b to
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 POSIXPathToItem\cf2 )\
	\cf5 -- create an instance of the File Manager\cf2 \
	
\b set
\b0  \cf4 thisFileManager\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSFileManager's\cf2  \cf6 defaultManager\cf2 ()\
	\cf5 -- check for existence\cf2 \
	
\b set
\b0  \cf4 fileExistenceStatus\cf2  
\b to
\b0  (\cf4 thisFileManager's\cf2  \cf6 fileExistsAtPath\cf2 :\cf4 POSIXPathToItem\cf2 ) 
\b as
\b0  
\i \cf3 boolean
\i0 \cf2 \
	\cf5 -- return result\cf2 \
	
\b return
\b0  \cf4 fileExistenceStatus\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGcheckForItemExistence\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGgetUTIFor\cf2 (\cf4 thisPath\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGgetUTIFor(thisPath)"\
	
\b set
\b0  \cf4 thisPath\cf2  
\b to
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 thisPath\cf2 )\
	
\b set
\b0  \cf4 anNSURL\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 |NSURL|'s\cf2  \cf6 fileURLWithPath\cf2 :\cf4 thisPath\cf2 \
	
\b set
\b0  \{\cf4 theResult\cf2 , \cf4 theUTI\cf2 , \cf4 theError\cf2 \} 
\b to
\b0  \cf4 anNSURL's\cf2  \cf6 getResourceValue\cf2 :(
\i \cf3 specifier
\i0 \cf2 ) \cf6 forKey\cf2 :(
\i \cf8 current application's
\i0 \cf2  \cf4 NSURLTypeIdentifierKey\cf2 ) \cf6 |error|\cf2 :(
\i \cf3 specifier
\i0 \cf2 )\
	
\b if
\b0  
\b not
\b0  \cf4 theResult\cf2  
\b then
\b0  
\b error
\b0  (\cf4 theError's\cf2  \cf6 localizedDescription\cf2 () 
\b as
\b0  
\i \cf3 text
\i0 \cf2 )\
	
\b return
\b0  \cf4 theUTI\cf2  
\b as
\b0  
\i \cf3 text
\i0 \cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGgetUTIFor\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGextractBundleIndentifierFromIPA\cf2 (\cf4 thisAppFile\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGextractBundleIndentifierFromIPA(thisAppFile)"\
	
\b set
\b0  \cf4 POSIXPathToItem\cf2  
\b to
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 thisAppFile\cf2 )\
	
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  "unzip -p " & \cf8 quoted form\cf2  
\b of
\b0  \cf4 POSIXPathToItem\cf2  & " iTunesMetadata.plist"\
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
	
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	\cf5 -- CREATE A PROPERTY LIST OBJECT FROM RETURNED TEXT\cf2 \
	
\b set
\b0  \cf4 anNSString\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 queryResult\cf2 \
	
\b set
\b0  \cf4 theNSDictionary\cf2  
\b to
\b0  \cf4 anNSString's\cf2  \cf6 propertyList\cf2 ()\
	\cf5 (* PARSE PROPERTY LIST *)\cf2 \
	
\b return
\b0  (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"softwareVersionBundleId") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGextractBundleIndentifierFromIPA\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGextractInfoFromIPA\cf2 (\cf4 thisAppFile\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGextractInfoFromIPA(thisAppFile)"\
	
\b try
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 POSIXPathToItem\cf2  
\b to
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 thisAppFile\cf2 )\
		
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  "unzip -p " & \cf8 quoted form\cf2  
\b of
\b0  \cf4 POSIXPathToItem\cf2  & " iTunesMetadata.plist"\
		
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
		
\b set
\b0  \cf4 queryResult\cf2  
\b to
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
		\cf5 -- CREATE A PROPERTY LIST OBJECT FROM RETURNED TEXT\cf2 \
		
\b set
\b0  \cf4 anNSString\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 queryResult\cf2 \
		
\b set
\b0  \cf4 theNSDictionary\cf2  
\b to
\b0  \cf4 anNSString's\cf2  \cf6 propertyList\cf2 ()\
		\cf5 (* PARSE PROPERTY LIST *)\cf2 \
		\cf5 -- \{mobileAppName, mobileAppVersion, mobileAppDeveloper, mobileAppIndentifier\}\cf2 \
		
\b return
\b0  \{(\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"itemName") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 , (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"bundleShortVersionString") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 , (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"artistName") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 , (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"softwareVersionBundleId") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \}\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b on
\b0  
\b error
\b0  \cf4 errorMessage\cf2  \cf3 number\cf2  \cf4 errorNumber\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b if
\b0  \cf4 errorNumber\cf2  
\b is
\b0  11 
\b then
\b0  \cf5 -- it's a non-iTunes App Store app\cf2 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  "unzip -l " & \cf8 quoted form\cf2  
\b of
\b0  \cf4 POSIXPathToItem\cf2  & " | grep \\"Info.plist\\""\
			\cf5 -- LOOK FOR THE Info.plist WITHIN THE BUNDLE\cf2 \
			\cf5 -- command returns a list of paths to Info.plist files within the archive\cf2 \
			\cf5 --> "      763  12-11-14 08:02   Payload/Caffe Macs.app/Frameworks/CaffeMacs.framework/Info.plist"\cf2 \
			\cf5 --> "     115  12-11-14 08:02   Payload/Caffe Macs.app/Frameworks/CaffeMacs.framework/LaunchScreen.storyboardc/Info.plist"\cf2 \
			\cf5 --> "     1580  12-11-14 08:02   Payload/Caffe Macs.app/Info.plist"\cf2 \
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			\cf5 -- get one of the Info.plist paths\cf2 \
			
\b set
\b0  \cf4 thisDataString\cf2  
\b to
\b0  
\b first
\b0  
\i \cf3 paragraph
\i0 \cf2  
\b of
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
			\cf5 -- remove the data before the \'93Payload\'94\cf2 \
			
\b set
\b0  \cf4 x\cf2  
\b to
\b0  
\b the
\b0  
\b \cf7 offset
\b0 \cf2  \cf7 of\cf2  "Payload" \cf7 in\cf2  \cf4 thisDataString\cf2 \
			\cf5 --> 29\cf2 \
			
\b set
\b0  \cf4 thisPath\cf2  
\b to
\b0  
\i \cf3 text
\i0 \cf2  
\b from
\b0  \cf4 x\cf2  
\b to
\b0  -1 
\b of
\b0  \cf4 thisDataString\cf2 \
			\cf5 --> "Payload/Caffe Macs.app/Frameworks/CaffeMacs.framework/Info.plist"\cf2 \
			\cf5 -- DERIVE THE PATH WITHIN THE BUNDLE TO THE Info.plist FILE\cf2 \
			
\b set
\b0  \cf4 thisCocoaString\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 stringWithString\cf2 :\cf4 thisPath\cf2 \
			
\b set
\b0  \cf4 pathComponents\cf2  
\b to
\b0  (\cf4 thisCocoaString's\cf2  \cf6 componentsSeparatedByString\cf2 :"/") 
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
			
\b set
\b0  \cf4 internalPathToInfoFile\cf2  
\b to
\b0  (
\i \cf3 item
\i0 \cf2  1 
\b of
\b0  \cf4 pathComponents\cf2 ) & "/" & (
\i \cf3 item
\i0 \cf2  2 
\b of
\b0  \cf4 pathComponents\cf2 ) & "/Info.plist"\
			\cf5 --> "Payload/Catalog.app/Info.plist"\cf2 \
			\cf5 -- EXTRACT THE Info.plist INTO A FOLDER IN THE TMP FOLDER\cf2 \
			
\b set
\b0  \cf4 thisUUID\cf2  
\b to
\b0  
\b \cf7 do shell script
\b0 \cf2  "uuidgen"\
			
\b set
\b0  \cf4 tempfolderPath\cf2  
\b to
\b0  "/tmp/" & \cf4 thisUUID\cf2 \
			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  "unzip" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 POSIXPathToItem\cf2  & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 internalPathToInfoFile\cf2  & \cf8 space\cf2  & "-d" & \cf8 space\cf2  & \cf8 quoted form\cf2  
\b of
\b0  \cf4 tempfolderPath\cf2 \
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 \
			\cf5 -- CREATE A PROPERTY LIST USING THE CONTENTS OF THE EXTRACTED FILE\cf2 \
			
\b set
\b0  \cf4 pathToExtractedFile\cf2  
\b to
\b0  \cf4 tempfolderPath\cf2  & "/" & \cf4 internalPathToInfoFile\cf2 \
			
\b set
\b0  \cf4 theNSDictionary\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSDictionary's\cf2  \cf6 dictionaryWithContentsOfFile\cf2 :\cf4 pathToExtractedFile\cf2 \
			\cf5 -- DELETE THE TEMP FOLDER\cf2 \
			
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  "rm -R" & \cf8 space\cf2  & \cf4 tempfolderPath\cf2 \
			
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
			
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 \
			\cf5 (* PARSE PROPERTY LIST *)\cf2 \
			\cf5 -- \{mobileAppName, mobileAppVersion, mobileAppDeveloper, mobileAppIndentifier\}\cf2 \
			
\b return
\b0  \{(\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"CFBundleName") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 , (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"CFBundleShortVersionString") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 , (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"CFBundleIdentifier") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 , (\cf4 theNSDictionary's\cf2  \cf6 valueForKey\cf2 :"CFBundleIdentifier") 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \}\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b \cf3 log
\b0 \cf2  ("ERROR: " & \cf4 errorMessage\cf2 )\
			
\b error
\b0  \cf4 errorMessage\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b try
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGextractInfoFromIPA\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGlistIPAsOnSystem\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGlistIPAsOnSystem()"\
	
\b set
\b0  \cf4 commandString\cf2  
\b to
\b0  "mdfind \\"kMDItemContentType == com.apple.itunes.ipa\\""\
	
\b \cf3 log
\b0 \cf2  ("commandString: " & \cf4 commandString\cf2 )\
	
\b set
\b0  \cf4 theseMobileAppsPaths\cf2  
\b to
\b0  
\b every
\b0  
\i \cf3 paragraph
\i0 \cf2  
\b of
\b0  (
\b \cf7 do shell script
\b0 \cf2  \cf4 commandString\cf2 )\
	
\b return
\b0  \cf4 theseMobileAppsPaths\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGlistIPAsOnSystem\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* NSTask handler *)\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 CNFGrunATaskWithArguments\cf2 (\cf4 thePath\cf2 , \cf4 theArgList\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b \cf3 log
\b0 \cf2  "Handler: CNFGrunATaskWithArguments(thePath, theArgList)"\
	\cf5 -- handler courtesy "AppleScriptObjC Explored" by Shane Stanley\cf2 \
	\cf5 -- <https://macosxautomation.com/applescript/apps/book.html>\cf2 \
	\cf5 -- create pipe for standard output, then get a file handle for reading from it\cf2 \
	
\b set
\b0  \cf4 outPipe\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSPipe's\cf2  \cf6 pipe\cf2 ()\
	
\b set
\b0  \cf4 outFileHandle\cf2  
\b to
\b0  \cf4 outPipe's\cf2  \cf6 fileHandleForReading\cf2 ()\
	\cf5 -- create pipe for standard error, then get a file handle for reading from it \cf2 \
	
\b set
\b0  \cf4 errPipe\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSPipe's\cf2  \cf6 pipe\cf2 ()\
	
\b set
\b0  \cf4 errFileHandle\cf2  
\b to
\b0  \cf4 errPipe's\cf2  \cf6 fileHandleForReading\cf2 ()\
	\cf5 -- make task and launch it\cf2 \
	
\b set
\b0  \cf4 theTask\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSTask's\cf2  \cf6 alloc\cf2 ()'s \cf6 init\cf2 ()\
	
\b tell
\b0  \cf4 theTask\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b its
\b0  \cf6 setLaunchPath\cf2 :\cf4 thePath\cf2 \
		
\b its
\b0  \cf6 setArguments\cf2 :\cf4 theArgList\cf2 \
		
\b its
\b0  \cf6 setStandardOutput\cf2 :\cf4 outPipe\cf2 \
		
\b its
\b0  \cf6 setStandardError\cf2 :\cf4 errPipe\cf2 \
		
\b its
\b0  \cf6 |launch|\cf2 ()\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b tell
\b0 \
	\cf5 -- read standard output and standard error; result is data\cf2 \
	
\b set
\b0  \cf4 outData\cf2  
\b to
\b0  \cf4 outFileHandle's\cf2  \cf6 readDataToEndOfFile\cf2 ()\
	
\b set
\b0  \cf4 errData\cf2  
\b to
\b0  \cf4 errFileHandle's\cf2  \cf6 readDataToEndOfFile\cf2 () \cf5 -- make sure it's finished\cf2 \
	\cf4 theTask's\cf2  \cf6 waitUntilExit\cf2 ()\
	\cf5 -- check if all went OK\cf2 \
	
\b if
\b0  (\cf4 theTask's\cf2  \cf6 terminationStatus\cf2 ()) 
\b as
\b0  
\i \cf3 integer
\i0 \cf2  = 0 
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 didSucceed\cf2  
\b to
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 didSucceed\cf2  
\b to
\b0  
\i \cf8 false
\i0 \cf2 \
		
\b set
\b0  \cf4 outData\cf2  
\b to
\b0  \cf4 errData\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	\cf5 -- convert data to string\cf2 \
	
\b set
\b0  \cf4 theString\cf2  
\b to
\b0  (
\i \cf8 current application's
\i0 \cf2  \cf4 NSString's\cf2  \cf6 alloc\cf2 ()'s \cf6 initWithData\cf2 :\cf4 outData\cf2  \cf6 encoding\cf2 :(
\i \cf8 current application's
\i0 \cf2  \cf4 NSUTF8StringEncoding\cf2 )) 
\b as
\b0  
\i \cf3 string
\i0 \cf2 \
	
\b return
\b0  \{\cf4 didSucceed\cf2 , \cf4 theString\cf2 \}\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 CNFGrunATaskWithArguments\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* LOCALIZATION ROUTINE *)\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 getLocalizedStringForKey\cf2 (\cf4 thisErrorKey\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b return
\b0  (
\b \cf7 localized string
\b0 \cf2  \cf4 thisErrorKey\cf2 )\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 getLocalizedStringForKey\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 (* SUPPORTING HANDLERS *)\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 recordFromLabels\cf2 :\cf4 labels\cf2  \cf6 andValues\cf2 :\cf4 values\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b set
\b0  \cf4 theResult\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSDictionary's\cf2  \cf6 dictionaryWithObjects\cf2 :\cf4 values\cf2  \cf6 forKeys\cf2 :\cf4 labels\cf2 \
	
\b return
\b0  \cf4 theResult\cf2  
\b as
\b0  
\i \cf3 record
\i0 \cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 recordFromLabels:andValues:\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 stringFromList\cf2 :\cf4 thisList\cf2  \cf6 usingDelimiter\cf2 :\cf4 thisDelimiterString\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b set
\b0  \cf4 thisArray\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSArray's\cf2  \cf6 arrayWithArray\cf2 :\cf4 thisList\cf2 \
	
\b set
\b0  \cf4 combinedItemsString\cf2  
\b to
\b0  (\cf4 thisArray's\cf2  \cf6 componentsJoinedByString\cf2 :\cf4 thisDelimiterString\cf2 ) 
\b as
\b0  
\i \cf3 text
\i0 \cf2 \
	
\b return
\b0  \cf4 combinedItemsString\cf2  
\b as
\b0  
\i \cf3 text
\i0 \cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 stringFromList:usingDelimiter:\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 sortAList\cf2 :\cf4 theList\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b set
\b0  \cf4 theArray\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSArray's\cf2  \cf6 arrayWithArray\cf2 :\cf4 theList\cf2 \
	
\b set
\b0  \cf4 theArray\cf2  
\b to
\b0  \cf4 theArray's\cf2  \cf6 sortedArrayUsingSelector\cf2 :"localizedStandardCompare:"\
	
\b return
\b0  \cf4 theArray\cf2  
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 sortAList:\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 offsetOfItemInList\cf2 (\cf4 thisItem\cf2 , \cf4 thisList\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 (*\
	repeat with i from 1 to the count of thisList\
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf5 		if thisItem is (item i of thisList) then return i\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf5 	end repeat\
	return 0\
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0
\cf5 *)\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b set
\b0  \cf4 thisArray\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSArray's\cf2  \cf6 arrayWithArray\cf2 :\cf4 thisList\cf2 \
	
\b try
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 itemOffset\cf2  
\b to
\b0  ((\cf4 thisArray's\cf2  \cf6 indexOfObject\cf2 :\cf4 thisItem\cf2 ) 
\b as
\b0  
\i \cf3 integer
\i0 \cf2 ) + 1\
		
\b return
\b0  \cf4 itemOffset\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b on
\b0  
\b error
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  0\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b try
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 offsetOfItemInList\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 convertNumbersToStrings\cf2 (\cf4 theseNumbers\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- if you pass in a list of numbers, you get back a list of numeric strings\cf2 \
	\cf5 -- if you pass in a single number, you get back a single string\cf2 \
	
\b if
\b0  
\b the
\b0  
\i \cf3 class
\i0 \cf2  
\b of
\b0  \cf4 theseNumbers\cf2  
\b is
\b0  
\b not
\b0  
\i \cf3 list
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 theseNumbers\cf2  
\b to
\b0  \cf4 theseNumbers\cf2  
\b as
\b0  
\i \cf3 list
\i0 \cf2 \
		
\b set
\b0  \cf4 returnAsItem\cf2  
\b to
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 returnAsItem\cf2  
\b to
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
	
\b set
\b0  \cf4 theFormatter\cf2  
\b to
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSNumberFormatter's\cf2  \cf6 new\cf2 ()\
	\cf4 theFormatter's\cf2  \cf6 setNumberStyle\cf2 :(
\i \cf8 current application's
\i0 \cf2  \cf4 NSNumberFormatterNoStyle\cf2 )\
	
\b set
\b0  \cf4 convertedValues\cf2  
\b to
\b0  \{\}\
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 theseNumbers\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 thisNumber\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 theseNumbers\cf2 \
		
\b set
\b0  \cf4 numberString\cf2  
\b to
\b0  (\cf4 theFormatter's\cf2  \cf6 stringFromNumber\cf2 :\cf4 thisNumber\cf2 ) 
\b as
\b0  
\i \cf3 text
\i0 \cf2 \
		
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  
\b the
\b0  \cf4 convertedValues\cf2  
\b to
\b0  \cf4 numberString\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	
\b if
\b0  \cf4 returnAsItem\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  (
\i \cf3 item
\i0 \cf2  1 
\b of
\b0  \cf4 convertedValues\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b else
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b return
\b0  \cf4 convertedValues\cf2 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 convertNumbersToStrings\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 revealInFinder\cf2 (\cf4 theseItems\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	\cf5 -- convert passed file refs to POSIX paths and then to file URLs\cf2 \
	
\b set
\b0  \cf4 theseURLs\cf2  
\b to
\b0  \{\}\
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  
\b \cf3 count
\b0 \cf2  
\b of
\b0  \cf4 theseItems\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 thisItem\cf2  
\b to
\b0  
\i \cf3 item
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 theseItems\cf2 \
		
\b set
\b0  \cf4 thisItemPOSIXPath\cf2  
\b to
\b0  
\b my
\b0  \cf6 CNFGreturnPOSIXPathForItem\cf2 (\cf4 thisItem\cf2 )\
		
\b set
\b0  
\b the
\b0  
\b end
\b0  
\b of
\b0  \cf4 theseURLs\cf2  
\b to
\b0  (
\i \cf8 current application's
\i0 \cf2  \cf4 NSURL's\cf2  \cf6 fileURLWithPath\cf2 :\cf4 thisItemPOSIXPath\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	\cf5 -- reveal items in file viewer\cf2 \
	
\b tell
\b0  
\i \cf8 current application's
\i0 \cf2  \cf4 NSWorkspace\cf2  
\b to
\b0  
\b set
\b0  \cf4 theWorkspace\cf2  
\b to
\b0  \cf6 sharedWorkspace\cf2 ()\
	
\b tell
\b0  \cf4 theWorkspace\cf2  
\b to
\b0  \cf6 activateFileViewerSelectingURLs\cf2 :\cf4 theseURLs\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 revealInFinder\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 on
\b0  \cf6 camelCaseToWordCase\cf2 (\cf4 targetString\cf2 )\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b set
\b0  \cf4 uppercaseLetters\cf2  
\b to
\b0  "ABCDEFGHIJKLMNOPQRSTUVWXYZ"\
	
\b set
\b0  \cf4 lowercaseLetters\cf2  
\b to
\b0  "abcdefghijklmnopqrstuvwxyz"\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 	\
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b set
\b0  \cf4 newString\cf2  
\b to
\b0  ""\
	
\b set
\b0  \cf4 stringLength\cf2  
\b to
\b0  \cf8 length\cf2  
\b of
\b0  \cf4 targetString\cf2 \
	
\b repeat
\b0  
\b with
\b0  \cf4 i\cf2  
\b from
\b0  1 
\b to
\b0  
\b the
\b0  \cf4 stringLength\cf2 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b set
\b0  \cf4 thisCharacter\cf2  
\b to
\b0  
\i \cf3 character
\i0 \cf2  \cf4 i\cf2  
\b of
\b0  \cf4 targetString\cf2 \
		
\b if
\b0  \cf4 i\cf2  
\b is
\b0  1 
\b then
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b considering
\b0  
\i \cf8 case
\i0 \cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b if
\b0  \cf4 thisCharacter\cf2  
\b is not
\b0  
\b in
\b0  \cf4 uppercaseLetters\cf2  
\b then
\b0 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  \cf4 x\cf2  
\b to
\b0  
\b \cf7 offset
\b0 \cf2  \cf7 of\cf2  \cf4 thisCharacter\cf2  \cf7 in\cf2  \cf4 lowercaseLetters\cf2 \
					
\b set
\b0  \cf4 uppercaseCharacter\cf2  
\b to
\b0  
\i \cf3 character
\i0 \cf2  \cf4 x\cf2  
\b of
\b0  \cf4 uppercaseLetters\cf2 \
					
\b set
\b0  \cf4 newString\cf2  
\b to
\b0  \cf4 uppercaseCharacter\cf2 \
					
\b set
\b0  \cf4 allCapsFlag\cf2  
\b to
\b0  
\i \cf8 false
\i0 \cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b else
\b0 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  \cf4 newString\cf2  
\b to
\b0  \cf4 thisCharacter\cf2 \
					
\b set
\b0  \cf4 allCapsFlag\cf2  
\b to
\b0  
\i \cf8 true
\i0 \cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b considering
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b else
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b considering
\b0  
\i \cf8 case
\i0 \cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b if
\b0  \cf4 thisCharacter\cf2  
\b is
\b0  
\b in
\b0  \cf4 uppercaseLetters\cf2  
\b then
\b0 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b if
\b0  \cf4 allCapsFlag\cf2  
\b is
\b0  
\i \cf8 true
\i0 \cf2  
\b then
\b0 \
\pard\pardeftab560\li3920\fi-3920\slleading22\pardirnatural\partightenfactor0
\cf2 						
\b set
\b0  \cf4 newString\cf2  
\b to
\b0  \cf4 newString\cf2  & \cf4 thisCharacter\cf2 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b else
\b0 \
\pard\pardeftab560\li3920\fi-3920\slleading22\pardirnatural\partightenfactor0
\cf2 						
\b if
\b0  
\i \cf3 character
\i0 \cf2  (\cf4 i\cf2  - 1) 
\b of
\b0  \cf4 targetString\cf2  
\b is
\b0  
\b in
\b0  \cf4 uppercaseLetters\cf2  
\b then
\b0 \
\pard\pardeftab560\li4480\fi-4480\slleading22\pardirnatural\partightenfactor0
\cf2 							
\b set
\b0  \cf4 newString\cf2  
\b to
\b0  \cf4 newString\cf2  & \cf4 thisCharacter\cf2 \
\pard\pardeftab560\li3920\fi-3920\slleading22\pardirnatural\partightenfactor0
\cf2 						
\b else
\b0 \
\pard\pardeftab560\li4480\fi-4480\slleading22\pardirnatural\partightenfactor0
\cf2 							
\b set
\b0  \cf4 newString\cf2  
\b to
\b0  \cf4 newString\cf2  & \cf8 space\cf2  & \cf4 thisCharacter\cf2 \
\pard\pardeftab560\li3920\fi-3920\slleading22\pardirnatural\partightenfactor0
\cf2 						
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b else
\b0 \
\pard\pardeftab560\li3360\fi-3360\slleading22\pardirnatural\partightenfactor0
\cf2 					
\b set
\b0  \cf4 newString\cf2  
\b to
\b0  \cf4 newString\cf2  & \cf4 thisCharacter\cf2 \
\pard\pardeftab560\li2800\fi-2800\slleading22\pardirnatural\partightenfactor0
\cf2 				
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li2240\fi-2240\slleading22\pardirnatural\partightenfactor0
\cf2 			
\b end
\b0  
\b considering
\b0 \
\pard\pardeftab560\li1680\fi-1680\slleading22\pardirnatural\partightenfactor0
\cf2 		
\b end
\b0  
\b if
\b0 \
\pard\pardeftab560\li1120\fi-1120\slleading22\pardirnatural\partightenfactor0
\cf2 	
\b end
\b0  
\b repeat
\b0 \
	
\b return
\b0  \cf4 newString\cf2 \
\pard\pardeftab560\li560\fi-560\slleading22\pardirnatural\partightenfactor0

\b \cf2 end
\b0  \cf6 camelCaseToWordCase\cf2 \
}